### YamlMime:ManagedReference
items:
- uid: ECS.Core.ComponentPool`1
  commentId: T:ECS.Core.ComponentPool`1
  id: ComponentPool`1
  parent: ECS.Core
  children:
  - ECS.Core.ComponentPool`1.COMPONENT_ARRAY_SIZE
  - ECS.Core.ComponentPool`1.Count
  - ECS.Core.ComponentPool`1.EnsureCapacity(System.Int32)
  - ECS.Core.ComponentPool`1.Get(ECS.Core.Entity)
  - ECS.Core.ComponentPool`1.Has(ECS.Core.Entity)
  - ECS.Core.ComponentPool`1.Remove(ECS.Core.Entity)
  - ECS.Core.ComponentPool`1.Set(ECS.Core.Entity,`0)
  - ECS.Core.ComponentPool`1.capacity
  - ECS.Core.ComponentPool`1.components
  - ECS.Core.ComponentPool`1.entityToIndex
  - ECS.Core.ComponentPool`1.freeIndices
  langs:
  - csharp
  - vb
  name: ComponentPool<T>
  nameWithType: ComponentPool<T>
  fullName: ECS.Core.ComponentPool<T>
  type: Class
  source:
    remote:
      path: Core/ComponentPool.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: ComponentPool
    path: ../Core/ComponentPool.cs
    startLine: 2
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: 'public sealed class ComponentPool<T> : IComponentPool where T : struct'
    typeParameters:
    - id: T
    content.vb: Public NotInheritable Class ComponentPool(Of T As Structure) Implements IComponentPool
  inheritance:
  - System.Object
  implements:
  - ECS.Core.IComponentPool
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ComponentPool(Of T)
  fullName.vb: ECS.Core.ComponentPool(Of T)
  name.vb: ComponentPool(Of T)
- uid: ECS.Core.ComponentPool`1.COMPONENT_ARRAY_SIZE
  commentId: F:ECS.Core.ComponentPool`1.COMPONENT_ARRAY_SIZE
  id: COMPONENT_ARRAY_SIZE
  parent: ECS.Core.ComponentPool`1
  langs:
  - csharp
  - vb
  name: COMPONENT_ARRAY_SIZE
  nameWithType: ComponentPool<T>.COMPONENT_ARRAY_SIZE
  fullName: ECS.Core.ComponentPool<T>.COMPONENT_ARRAY_SIZE
  type: Field
  source:
    remote:
      path: Core/ComponentPool.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: COMPONENT_ARRAY_SIZE
    path: ../Core/ComponentPool.cs
    startLine: 4
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: private const int COMPONENT_ARRAY_SIZE = 1024
    return:
      type: System.Int32
    content.vb: Private Const COMPONENT_ARRAY_SIZE As Integer = 1024
  nameWithType.vb: ComponentPool(Of T).COMPONENT_ARRAY_SIZE
  fullName.vb: ECS.Core.ComponentPool(Of T).COMPONENT_ARRAY_SIZE
- uid: ECS.Core.ComponentPool`1.components
  commentId: F:ECS.Core.ComponentPool`1.components
  id: components
  parent: ECS.Core.ComponentPool`1
  langs:
  - csharp
  - vb
  name: components
  nameWithType: ComponentPool<T>.components
  fullName: ECS.Core.ComponentPool<T>.components
  type: Field
  source:
    remote:
      path: Core/ComponentPool.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: components
    path: ../Core/ComponentPool.cs
    startLine: 5
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: private T[] components
    return:
      type: '{T}[]'
    content.vb: Private components As T()
  nameWithType.vb: ComponentPool(Of T).components
  fullName.vb: ECS.Core.ComponentPool(Of T).components
- uid: ECS.Core.ComponentPool`1.entityToIndex
  commentId: F:ECS.Core.ComponentPool`1.entityToIndex
  id: entityToIndex
  parent: ECS.Core.ComponentPool`1
  langs:
  - csharp
  - vb
  name: entityToIndex
  nameWithType: ComponentPool<T>.entityToIndex
  fullName: ECS.Core.ComponentPool<T>.entityToIndex
  type: Field
  source:
    remote:
      path: Core/ComponentPool.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: entityToIndex
    path: ../Core/ComponentPool.cs
    startLine: 6
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: private Dictionary<int, int> entityToIndex
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,System.Int32}
    content.vb: Private entityToIndex As Dictionary(Of Integer, Integer)
  nameWithType.vb: ComponentPool(Of T).entityToIndex
  fullName.vb: ECS.Core.ComponentPool(Of T).entityToIndex
- uid: ECS.Core.ComponentPool`1.freeIndices
  commentId: F:ECS.Core.ComponentPool`1.freeIndices
  id: freeIndices
  parent: ECS.Core.ComponentPool`1
  langs:
  - csharp
  - vb
  name: freeIndices
  nameWithType: ComponentPool<T>.freeIndices
  fullName: ECS.Core.ComponentPool<T>.freeIndices
  type: Field
  source:
    remote:
      path: Core/ComponentPool.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: freeIndices
    path: ../Core/ComponentPool.cs
    startLine: 7
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: private Stack<int> freeIndices
    return:
      type: System.Collections.Generic.Stack{System.Int32}
    content.vb: Private freeIndices As Stack(Of Integer)
  nameWithType.vb: ComponentPool(Of T).freeIndices
  fullName.vb: ECS.Core.ComponentPool(Of T).freeIndices
- uid: ECS.Core.ComponentPool`1.capacity
  commentId: F:ECS.Core.ComponentPool`1.capacity
  id: capacity
  parent: ECS.Core.ComponentPool`1
  langs:
  - csharp
  - vb
  name: capacity
  nameWithType: ComponentPool<T>.capacity
  fullName: ECS.Core.ComponentPool<T>.capacity
  type: Field
  source:
    remote:
      path: Core/ComponentPool.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: capacity
    path: ../Core/ComponentPool.cs
    startLine: 8
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: private int capacity
    return:
      type: System.Int32
    content.vb: Private capacity As Integer
  nameWithType.vb: ComponentPool(Of T).capacity
  fullName.vb: ECS.Core.ComponentPool(Of T).capacity
- uid: ECS.Core.ComponentPool`1.Count
  commentId: P:ECS.Core.ComponentPool`1.Count
  id: Count
  parent: ECS.Core.ComponentPool`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ComponentPool<T>.Count
  fullName: ECS.Core.ComponentPool<T>.Count
  type: Property
  source:
    remote:
      path: Core/ComponentPool.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: Count
    path: ../Core/ComponentPool.cs
    startLine: 10
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: ECS.Core.ComponentPool`1.Count*
  nameWithType.vb: ComponentPool(Of T).Count
  fullName.vb: ECS.Core.ComponentPool(Of T).Count
- uid: ECS.Core.ComponentPool`1.EnsureCapacity(System.Int32)
  commentId: M:ECS.Core.ComponentPool`1.EnsureCapacity(System.Int32)
  id: EnsureCapacity(System.Int32)
  parent: ECS.Core.ComponentPool`1
  langs:
  - csharp
  - vb
  name: EnsureCapacity(int)
  nameWithType: ComponentPool<T>.EnsureCapacity(int)
  fullName: ECS.Core.ComponentPool<T>.EnsureCapacity(int)
  type: Method
  source:
    remote:
      path: Core/ComponentPool.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: EnsureCapacity
    path: ../Core/ComponentPool.cs
    startLine: 12
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: public void EnsureCapacity(int newCapacity)
    parameters:
    - id: newCapacity
      type: System.Int32
    content.vb: Public Sub EnsureCapacity(newCapacity As Integer)
  overload: ECS.Core.ComponentPool`1.EnsureCapacity*
  nameWithType.vb: ComponentPool(Of T).EnsureCapacity(Integer)
  fullName.vb: ECS.Core.ComponentPool(Of T).EnsureCapacity(Integer)
  name.vb: EnsureCapacity(Integer)
- uid: ECS.Core.ComponentPool`1.Set(ECS.Core.Entity,`0)
  commentId: M:ECS.Core.ComponentPool`1.Set(ECS.Core.Entity,`0)
  id: Set(ECS.Core.Entity,`0)
  parent: ECS.Core.ComponentPool`1
  langs:
  - csharp
  - vb
  name: Set(Entity, T)
  nameWithType: ComponentPool<T>.Set(Entity, T)
  fullName: ECS.Core.ComponentPool<T>.Set(ECS.Core.Entity, T)
  type: Method
  source:
    remote:
      path: Core/ComponentPool.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: Set
    path: ../Core/ComponentPool.cs
    startLine: 22
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: public void Set(Entity entity, T component)
    parameters:
    - id: entity
      type: ECS.Core.Entity
    - id: component
      type: '{T}'
    content.vb: Public Sub [Set](entity As Entity, component As T)
  overload: ECS.Core.ComponentPool`1.Set*
  nameWithType.vb: ComponentPool(Of T).Set(Entity, T)
  fullName.vb: ECS.Core.ComponentPool(Of T).Set(ECS.Core.Entity, T)
- uid: ECS.Core.ComponentPool`1.Get(ECS.Core.Entity)
  commentId: M:ECS.Core.ComponentPool`1.Get(ECS.Core.Entity)
  id: Get(ECS.Core.Entity)
  parent: ECS.Core.ComponentPool`1
  langs:
  - csharp
  - vb
  name: Get(Entity)
  nameWithType: ComponentPool<T>.Get(Entity)
  fullName: ECS.Core.ComponentPool<T>.Get(ECS.Core.Entity)
  type: Method
  source:
    remote:
      path: Core/ComponentPool.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: Get
    path: ../Core/ComponentPool.cs
    startLine: 33
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: public ref T Get(Entity entity)
    parameters:
    - id: entity
      type: ECS.Core.Entity
    return:
      type: '{T}'
    content.vb: Public ByRef Function [Get](entity As Entity) As T
  overload: ECS.Core.ComponentPool`1.Get*
  nameWithType.vb: ComponentPool(Of T).Get(Entity)
  fullName.vb: ECS.Core.ComponentPool(Of T).Get(ECS.Core.Entity)
- uid: ECS.Core.ComponentPool`1.Has(ECS.Core.Entity)
  commentId: M:ECS.Core.ComponentPool`1.Has(ECS.Core.Entity)
  id: Has(ECS.Core.Entity)
  parent: ECS.Core.ComponentPool`1
  langs:
  - csharp
  - vb
  name: Has(Entity)
  nameWithType: ComponentPool<T>.Has(Entity)
  fullName: ECS.Core.ComponentPool<T>.Has(ECS.Core.Entity)
  type: Method
  source:
    remote:
      path: Core/ComponentPool.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: Has
    path: ../Core/ComponentPool.cs
    startLine: 34
  assemblies:
  - ECS
  namespace: ECS.Core
  example: []
  syntax:
    content: public bool Has(Entity entity)
    parameters:
    - id: entity
      type: ECS.Core.Entity
    return:
      type: System.Boolean
    content.vb: Public Function Has(entity As Entity) As Boolean
  overload: ECS.Core.ComponentPool`1.Has*
  implements:
  - ECS.Core.IComponentPool.Has(ECS.Core.Entity)
  nameWithType.vb: ComponentPool(Of T).Has(Entity)
  fullName.vb: ECS.Core.ComponentPool(Of T).Has(ECS.Core.Entity)
- uid: ECS.Core.ComponentPool`1.Remove(ECS.Core.Entity)
  commentId: M:ECS.Core.ComponentPool`1.Remove(ECS.Core.Entity)
  id: Remove(ECS.Core.Entity)
  parent: ECS.Core.ComponentPool`1
  langs:
  - csharp
  - vb
  name: Remove(Entity)
  nameWithType: ComponentPool<T>.Remove(Entity)
  fullName: ECS.Core.ComponentPool<T>.Remove(ECS.Core.Entity)
  type: Method
  source:
    remote:
      path: Core/ComponentPool.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: Remove
    path: ../Core/ComponentPool.cs
    startLine: 36
  assemblies:
  - ECS
  namespace: ECS.Core
  example: []
  syntax:
    content: public void Remove(Entity entity)
    parameters:
    - id: entity
      type: ECS.Core.Entity
    content.vb: Public Sub Remove(entity As Entity)
  overload: ECS.Core.ComponentPool`1.Remove*
  implements:
  - ECS.Core.IComponentPool.Remove(ECS.Core.Entity)
  nameWithType.vb: ComponentPool(Of T).Remove(Entity)
  fullName.vb: ECS.Core.ComponentPool(Of T).Remove(ECS.Core.Entity)
references:
- uid: ECS.Core
  commentId: N:ECS.Core
  href: ECS.html
  name: ECS.Core
  nameWithType: ECS.Core
  fullName: ECS.Core
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Core
    name: Core
    href: ECS.Core.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Core
    name: Core
    href: ECS.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ECS.Core.IComponentPool
  commentId: T:ECS.Core.IComponentPool
  parent: ECS.Core
  href: ECS.Core.IComponentPool.html
  name: IComponentPool
  nameWithType: IComponentPool
  fullName: ECS.Core.IComponentPool
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: System.Collections.Generic.Dictionary{System.Int32,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<int, int>
  nameWithType: Dictionary<int, int>
  fullName: System.Collections.Generic.Dictionary<int, int>
  nameWithType.vb: Dictionary(Of Integer, Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of Integer, Integer)
  name.vb: Dictionary(Of Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.Stack{System.Int32}
  commentId: T:System.Collections.Generic.Stack{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Stack`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  name: Stack<int>
  nameWithType: Stack<int>
  fullName: System.Collections.Generic.Stack<int>
  nameWithType.vb: Stack(Of Integer)
  fullName.vb: System.Collections.Generic.Stack(Of Integer)
  name.vb: Stack(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.Stack`1
  commentId: T:System.Collections.Generic.Stack`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  name: Stack<T>
  nameWithType: Stack<T>
  fullName: System.Collections.Generic.Stack<T>
  nameWithType.vb: Stack(Of T)
  fullName.vb: System.Collections.Generic.Stack(Of T)
  name.vb: Stack(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ECS.Core.ComponentPool`1.Count*
  commentId: Overload:ECS.Core.ComponentPool`1.Count
  href: ECS.Core.ComponentPool-1.html#ECS_Core_ComponentPool_1_Count
  name: Count
  nameWithType: ComponentPool<T>.Count
  fullName: ECS.Core.ComponentPool<T>.Count
  nameWithType.vb: ComponentPool(Of T).Count
  fullName.vb: ECS.Core.ComponentPool(Of T).Count
- uid: ECS.Core.ComponentPool`1.EnsureCapacity*
  commentId: Overload:ECS.Core.ComponentPool`1.EnsureCapacity
  href: ECS.Core.ComponentPool-1.html#ECS_Core_ComponentPool_1_EnsureCapacity_System_Int32_
  name: EnsureCapacity
  nameWithType: ComponentPool<T>.EnsureCapacity
  fullName: ECS.Core.ComponentPool<T>.EnsureCapacity
  nameWithType.vb: ComponentPool(Of T).EnsureCapacity
  fullName.vb: ECS.Core.ComponentPool(Of T).EnsureCapacity
- uid: ECS.Core.ComponentPool`1.Set*
  commentId: Overload:ECS.Core.ComponentPool`1.Set
  href: ECS.Core.ComponentPool-1.html#ECS_Core_ComponentPool_1_Set_ECS_Core_Entity__0_
  name: Set
  nameWithType: ComponentPool<T>.Set
  fullName: ECS.Core.ComponentPool<T>.Set
  nameWithType.vb: ComponentPool(Of T).Set
  fullName.vb: ECS.Core.ComponentPool(Of T).Set
- uid: ECS.Core.Entity
  commentId: T:ECS.Core.Entity
  parent: ECS.Core
  href: ECS.Core.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: ECS.Core.Entity
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: ECS.Core.ComponentPool`1.Get*
  commentId: Overload:ECS.Core.ComponentPool`1.Get
  href: ECS.Core.ComponentPool-1.html#ECS_Core_ComponentPool_1_Get_ECS_Core_Entity_
  name: Get
  nameWithType: ComponentPool<T>.Get
  fullName: ECS.Core.ComponentPool<T>.Get
  nameWithType.vb: ComponentPool(Of T).Get
  fullName.vb: ECS.Core.ComponentPool(Of T).Get
- uid: ECS.Core.ComponentPool`1.Has*
  commentId: Overload:ECS.Core.ComponentPool`1.Has
  href: ECS.Core.ComponentPool-1.html#ECS_Core_ComponentPool_1_Has_ECS_Core_Entity_
  name: Has
  nameWithType: ComponentPool<T>.Has
  fullName: ECS.Core.ComponentPool<T>.Has
  nameWithType.vb: ComponentPool(Of T).Has
  fullName.vb: ECS.Core.ComponentPool(Of T).Has
- uid: ECS.Core.IComponentPool.Has(ECS.Core.Entity)
  commentId: M:ECS.Core.IComponentPool.Has(ECS.Core.Entity)
  parent: ECS.Core.IComponentPool
  href: ECS.Core.IComponentPool.html#ECS_Core_IComponentPool_Has_ECS_Core_Entity_
  name: Has(Entity)
  nameWithType: IComponentPool.Has(Entity)
  fullName: ECS.Core.IComponentPool.Has(ECS.Core.Entity)
  spec.csharp:
  - uid: ECS.Core.IComponentPool.Has(ECS.Core.Entity)
    name: Has
    href: ECS.Core.IComponentPool.html#ECS_Core_IComponentPool_Has_ECS_Core_Entity_
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
  spec.vb:
  - uid: ECS.Core.IComponentPool.Has(ECS.Core.Entity)
    name: Has
    href: ECS.Core.IComponentPool.html#ECS_Core_IComponentPool_Has_ECS_Core_Entity_
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ECS.Core.ComponentPool`1.Remove*
  commentId: Overload:ECS.Core.ComponentPool`1.Remove
  href: ECS.Core.ComponentPool-1.html#ECS_Core_ComponentPool_1_Remove_ECS_Core_Entity_
  name: Remove
  nameWithType: ComponentPool<T>.Remove
  fullName: ECS.Core.ComponentPool<T>.Remove
  nameWithType.vb: ComponentPool(Of T).Remove
  fullName.vb: ECS.Core.ComponentPool(Of T).Remove
- uid: ECS.Core.IComponentPool.Remove(ECS.Core.Entity)
  commentId: M:ECS.Core.IComponentPool.Remove(ECS.Core.Entity)
  parent: ECS.Core.IComponentPool
  href: ECS.Core.IComponentPool.html#ECS_Core_IComponentPool_Remove_ECS_Core_Entity_
  name: Remove(Entity)
  nameWithType: IComponentPool.Remove(Entity)
  fullName: ECS.Core.IComponentPool.Remove(ECS.Core.Entity)
  spec.csharp:
  - uid: ECS.Core.IComponentPool.Remove(ECS.Core.Entity)
    name: Remove
    href: ECS.Core.IComponentPool.html#ECS_Core_IComponentPool_Remove_ECS_Core_Entity_
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
  spec.vb:
  - uid: ECS.Core.IComponentPool.Remove(ECS.Core.Entity)
    name: Remove
    href: ECS.Core.IComponentPool.html#ECS_Core_IComponentPool_Remove_ECS_Core_Entity_
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
