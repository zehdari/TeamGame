### YamlMime:ManagedReference
items:
- uid: ECS.Core.EntityFactory
  commentId: T:ECS.Core.EntityFactory
  id: EntityFactory
  parent: ECS.Core
  children:
  - ECS.Core.EntityFactory.#ctor(ECS.Core.World)
  - ECS.Core.EntityFactory.CreateAIFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig)
  - ECS.Core.EntityFactory.CreateEntityFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,ECS.Components.Input.InputConfig)
  - ECS.Core.EntityFactory.CreateGameStateEntity
  - ECS.Core.EntityFactory.CreateLine(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  - ECS.Core.EntityFactory.CreatePlayerFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,ECS.Components.Input.InputConfig)
  - ECS.Core.EntityFactory.CreateProjectile(Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,Microsoft.Xna.Framework.Vector2,System.Boolean)
  - ECS.Core.EntityFactory.CreateProjectileFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,Microsoft.Xna.Framework.Vector2,System.Boolean)
  - ECS.Core.EntityFactory.CreateWorldBoundaries(ECS.Core.EntityFactory,System.Int32,System.Int32)
  - ECS.Core.EntityFactory.world
  langs:
  - csharp
  - vb
  name: EntityFactory
  nameWithType: EntityFactory
  fullName: ECS.Core.EntityFactory
  type: Class
  source:
    remote:
      path: Core/EntityFactory.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: EntityFactory
    path: ../Core/EntityFactory.cs
    startLine: 17
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: public class EntityFactory
    content.vb: Public Class EntityFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ECS.Core.EntityFactory.world
  commentId: F:ECS.Core.EntityFactory.world
  id: world
  parent: ECS.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: world
  nameWithType: EntityFactory.world
  fullName: ECS.Core.EntityFactory.world
  type: Field
  source:
    remote:
      path: Core/EntityFactory.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: world
    path: ../Core/EntityFactory.cs
    startLine: 19
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: private readonly World world
    return:
      type: ECS.Core.World
    content.vb: Private ReadOnly world As World
- uid: ECS.Core.EntityFactory.#ctor(ECS.Core.World)
  commentId: M:ECS.Core.EntityFactory.#ctor(ECS.Core.World)
  id: '#ctor(ECS.Core.World)'
  parent: ECS.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: EntityFactory(World)
  nameWithType: EntityFactory.EntityFactory(World)
  fullName: ECS.Core.EntityFactory.EntityFactory(ECS.Core.World)
  type: Constructor
  source:
    remote:
      path: Core/EntityFactory.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: .ctor
    path: ../Core/EntityFactory.cs
    startLine: 21
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: public EntityFactory(World world)
    parameters:
    - id: world
      type: ECS.Core.World
    content.vb: Public Sub New(world As World)
  overload: ECS.Core.EntityFactory.#ctor*
  nameWithType.vb: EntityFactory.New(World)
  fullName.vb: ECS.Core.EntityFactory.New(ECS.Core.World)
  name.vb: New(World)
- uid: ECS.Core.EntityFactory.CreateGameStateEntity
  commentId: M:ECS.Core.EntityFactory.CreateGameStateEntity
  id: CreateGameStateEntity
  parent: ECS.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateGameStateEntity()
  nameWithType: EntityFactory.CreateGameStateEntity()
  fullName: ECS.Core.EntityFactory.CreateGameStateEntity()
  type: Method
  source:
    remote:
      path: Core/EntityFactory.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: CreateGameStateEntity
    path: ../Core/EntityFactory.cs
    startLine: 26
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: public Entity CreateGameStateEntity()
    return:
      type: ECS.Core.Entity
    content.vb: Public Function CreateGameStateEntity() As Entity
  overload: ECS.Core.EntityFactory.CreateGameStateEntity*
- uid: ECS.Core.EntityFactory.CreateEntityFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,ECS.Components.Input.InputConfig)
  commentId: M:ECS.Core.EntityFactory.CreateEntityFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,ECS.Components.Input.InputConfig)
  id: CreateEntityFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,ECS.Components.Input.InputConfig)
  parent: ECS.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateEntityFromConfig(EntityConfig, Texture2D, AnimationConfig, InputConfig)
  nameWithType: EntityFactory.CreateEntityFromConfig(EntityConfig, Texture2D, AnimationConfig, InputConfig)
  fullName: ECS.Core.EntityFactory.CreateEntityFromConfig(ECS.Resources.EntityConfig, Microsoft.Xna.Framework.Graphics.Texture2D, ECS.Components.Animation.AnimationConfig, ECS.Components.Input.InputConfig)
  type: Method
  source:
    remote:
      path: Core/EntityFactory.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: CreateEntityFromConfig
    path: ../Core/EntityFactory.cs
    startLine: 39
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: public Entity CreateEntityFromConfig(EntityConfig config, Texture2D spriteSheet = null, AnimationConfig animationConfig = default, InputConfig inputConfig = default)
    parameters:
    - id: config
      type: ECS.Resources.EntityConfig
    - id: spriteSheet
      type: Microsoft.Xna.Framework.Graphics.Texture2D
    - id: animationConfig
      type: ECS.Components.Animation.AnimationConfig
    - id: inputConfig
      type: ECS.Components.Input.InputConfig
    return:
      type: ECS.Core.Entity
    content.vb: Public Function CreateEntityFromConfig(config As EntityConfig, spriteSheet As Texture2D = Nothing, animationConfig As AnimationConfig = Nothing, inputConfig As InputConfig = Nothing) As Entity
  overload: ECS.Core.EntityFactory.CreateEntityFromConfig*
- uid: ECS.Core.EntityFactory.CreatePlayerFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,ECS.Components.Input.InputConfig)
  commentId: M:ECS.Core.EntityFactory.CreatePlayerFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,ECS.Components.Input.InputConfig)
  id: CreatePlayerFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,ECS.Components.Input.InputConfig)
  parent: ECS.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreatePlayerFromConfig(EntityConfig, Texture2D, AnimationConfig, InputConfig)
  nameWithType: EntityFactory.CreatePlayerFromConfig(EntityConfig, Texture2D, AnimationConfig, InputConfig)
  fullName: ECS.Core.EntityFactory.CreatePlayerFromConfig(ECS.Resources.EntityConfig, Microsoft.Xna.Framework.Graphics.Texture2D, ECS.Components.Animation.AnimationConfig, ECS.Components.Input.InputConfig)
  type: Method
  source:
    remote:
      path: Core/EntityFactory.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: CreatePlayerFromConfig
    path: ../Core/EntityFactory.cs
    startLine: 59
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: public Entity CreatePlayerFromConfig(EntityConfig config, Texture2D spriteSheet = null, AnimationConfig animationConfig = default, InputConfig inputConfig = default)
    parameters:
    - id: config
      type: ECS.Resources.EntityConfig
    - id: spriteSheet
      type: Microsoft.Xna.Framework.Graphics.Texture2D
    - id: animationConfig
      type: ECS.Components.Animation.AnimationConfig
    - id: inputConfig
      type: ECS.Components.Input.InputConfig
    return:
      type: ECS.Core.Entity
    content.vb: Public Function CreatePlayerFromConfig(config As EntityConfig, spriteSheet As Texture2D = Nothing, animationConfig As AnimationConfig = Nothing, inputConfig As InputConfig = Nothing) As Entity
  overload: ECS.Core.EntityFactory.CreatePlayerFromConfig*
- uid: ECS.Core.EntityFactory.CreateAIFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig)
  commentId: M:ECS.Core.EntityFactory.CreateAIFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig)
  id: CreateAIFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig)
  parent: ECS.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateAIFromConfig(EntityConfig, Texture2D, AnimationConfig)
  nameWithType: EntityFactory.CreateAIFromConfig(EntityConfig, Texture2D, AnimationConfig)
  fullName: ECS.Core.EntityFactory.CreateAIFromConfig(ECS.Resources.EntityConfig, Microsoft.Xna.Framework.Graphics.Texture2D, ECS.Components.Animation.AnimationConfig)
  type: Method
  source:
    remote:
      path: Core/EntityFactory.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: CreateAIFromConfig
    path: ../Core/EntityFactory.cs
    startLine: 78
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: public Entity CreateAIFromConfig(EntityConfig config, Texture2D spriteSheet = null, AnimationConfig animationConfig = default)
    parameters:
    - id: config
      type: ECS.Resources.EntityConfig
    - id: spriteSheet
      type: Microsoft.Xna.Framework.Graphics.Texture2D
    - id: animationConfig
      type: ECS.Components.Animation.AnimationConfig
    return:
      type: ECS.Core.Entity
    content.vb: Public Function CreateAIFromConfig(config As EntityConfig, spriteSheet As Texture2D = Nothing, animationConfig As AnimationConfig = Nothing) As Entity
  overload: ECS.Core.EntityFactory.CreateAIFromConfig*
- uid: ECS.Core.EntityFactory.CreateProjectileFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,Microsoft.Xna.Framework.Vector2,System.Boolean)
  commentId: M:ECS.Core.EntityFactory.CreateProjectileFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,Microsoft.Xna.Framework.Vector2,System.Boolean)
  id: CreateProjectileFromConfig(ECS.Resources.EntityConfig,Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,Microsoft.Xna.Framework.Vector2,System.Boolean)
  parent: ECS.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateProjectileFromConfig(EntityConfig, Texture2D, AnimationConfig, Vector2, bool)
  nameWithType: EntityFactory.CreateProjectileFromConfig(EntityConfig, Texture2D, AnimationConfig, Vector2, bool)
  fullName: ECS.Core.EntityFactory.CreateProjectileFromConfig(ECS.Resources.EntityConfig, Microsoft.Xna.Framework.Graphics.Texture2D, ECS.Components.Animation.AnimationConfig, Microsoft.Xna.Framework.Vector2, bool)
  type: Method
  source:
    remote:
      path: Core/EntityFactory.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: CreateProjectileFromConfig
    path: ../Core/EntityFactory.cs
    startLine: 95
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: public Entity CreateProjectileFromConfig(EntityConfig config, Texture2D spriteSheet = null, AnimationConfig animationConfig = default, Vector2 position = default, bool isFacingLeft = false)
    parameters:
    - id: config
      type: ECS.Resources.EntityConfig
    - id: spriteSheet
      type: Microsoft.Xna.Framework.Graphics.Texture2D
    - id: animationConfig
      type: ECS.Components.Animation.AnimationConfig
    - id: position
      type: Microsoft.Xna.Framework.Vector2
    - id: isFacingLeft
      type: System.Boolean
    return:
      type: ECS.Core.Entity
    content.vb: Public Function CreateProjectileFromConfig(config As EntityConfig, spriteSheet As Texture2D = Nothing, animationConfig As AnimationConfig = Nothing, position As Vector2 = Nothing, isFacingLeft As Boolean = False) As Entity
  overload: ECS.Core.EntityFactory.CreateProjectileFromConfig*
  nameWithType.vb: EntityFactory.CreateProjectileFromConfig(EntityConfig, Texture2D, AnimationConfig, Vector2, Boolean)
  fullName.vb: ECS.Core.EntityFactory.CreateProjectileFromConfig(ECS.Resources.EntityConfig, Microsoft.Xna.Framework.Graphics.Texture2D, ECS.Components.Animation.AnimationConfig, Microsoft.Xna.Framework.Vector2, Boolean)
  name.vb: CreateProjectileFromConfig(EntityConfig, Texture2D, AnimationConfig, Vector2, Boolean)
- uid: ECS.Core.EntityFactory.CreateLine(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  commentId: M:ECS.Core.EntityFactory.CreateLine(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  id: CreateLine(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  parent: ECS.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateLine(Vector2, Vector2)
  nameWithType: EntityFactory.CreateLine(Vector2, Vector2)
  fullName: ECS.Core.EntityFactory.CreateLine(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: Core/EntityFactory.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: CreateLine
    path: ../Core/EntityFactory.cs
    startLine: 117
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: public Entity CreateLine(Vector2 start, Vector2 end)
    parameters:
    - id: start
      type: Microsoft.Xna.Framework.Vector2
    - id: end
      type: Microsoft.Xna.Framework.Vector2
    return:
      type: ECS.Core.Entity
    content.vb: Public Function CreateLine(start As Vector2, [end] As Vector2) As Entity
  overload: ECS.Core.EntityFactory.CreateLine*
- uid: ECS.Core.EntityFactory.CreateProjectile(Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,Microsoft.Xna.Framework.Vector2,System.Boolean)
  commentId: M:ECS.Core.EntityFactory.CreateProjectile(Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,Microsoft.Xna.Framework.Vector2,System.Boolean)
  id: CreateProjectile(Microsoft.Xna.Framework.Graphics.Texture2D,ECS.Components.Animation.AnimationConfig,Microsoft.Xna.Framework.Vector2,System.Boolean)
  parent: ECS.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateProjectile(Texture2D, AnimationConfig, Vector2, bool)
  nameWithType: EntityFactory.CreateProjectile(Texture2D, AnimationConfig, Vector2, bool)
  fullName: ECS.Core.EntityFactory.CreateProjectile(Microsoft.Xna.Framework.Graphics.Texture2D, ECS.Components.Animation.AnimationConfig, Microsoft.Xna.Framework.Vector2, bool)
  type: Method
  source:
    remote:
      path: Core/EntityFactory.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: CreateProjectile
    path: ../Core/EntityFactory.cs
    startLine: 142
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: public Entity CreateProjectile(Texture2D spriteSheet, AnimationConfig animConfig, Vector2 pos, bool isFacingLeft)
    parameters:
    - id: spriteSheet
      type: Microsoft.Xna.Framework.Graphics.Texture2D
    - id: animConfig
      type: ECS.Components.Animation.AnimationConfig
    - id: pos
      type: Microsoft.Xna.Framework.Vector2
    - id: isFacingLeft
      type: System.Boolean
    return:
      type: ECS.Core.Entity
    content.vb: Public Function CreateProjectile(spriteSheet As Texture2D, animConfig As AnimationConfig, pos As Vector2, isFacingLeft As Boolean) As Entity
  overload: ECS.Core.EntityFactory.CreateProjectile*
  nameWithType.vb: EntityFactory.CreateProjectile(Texture2D, AnimationConfig, Vector2, Boolean)
  fullName.vb: ECS.Core.EntityFactory.CreateProjectile(Microsoft.Xna.Framework.Graphics.Texture2D, ECS.Components.Animation.AnimationConfig, Microsoft.Xna.Framework.Vector2, Boolean)
  name.vb: CreateProjectile(Texture2D, AnimationConfig, Vector2, Boolean)
- uid: ECS.Core.EntityFactory.CreateWorldBoundaries(ECS.Core.EntityFactory,System.Int32,System.Int32)
  commentId: M:ECS.Core.EntityFactory.CreateWorldBoundaries(ECS.Core.EntityFactory,System.Int32,System.Int32)
  id: CreateWorldBoundaries(ECS.Core.EntityFactory,System.Int32,System.Int32)
  parent: ECS.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateWorldBoundaries(EntityFactory, int, int)
  nameWithType: EntityFactory.CreateWorldBoundaries(EntityFactory, int, int)
  fullName: ECS.Core.EntityFactory.CreateWorldBoundaries(ECS.Core.EntityFactory, int, int)
  type: Method
  source:
    remote:
      path: Core/EntityFactory.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: CreateWorldBoundaries
    path: ../Core/EntityFactory.cs
    startLine: 210
  assemblies:
  - ECS
  namespace: ECS.Core
  syntax:
    content: public void CreateWorldBoundaries(EntityFactory entityFactory, int screenWidth, int screenHeight)
    parameters:
    - id: entityFactory
      type: ECS.Core.EntityFactory
    - id: screenWidth
      type: System.Int32
    - id: screenHeight
      type: System.Int32
    content.vb: Public Sub CreateWorldBoundaries(entityFactory As EntityFactory, screenWidth As Integer, screenHeight As Integer)
  overload: ECS.Core.EntityFactory.CreateWorldBoundaries*
  nameWithType.vb: EntityFactory.CreateWorldBoundaries(EntityFactory, Integer, Integer)
  fullName.vb: ECS.Core.EntityFactory.CreateWorldBoundaries(ECS.Core.EntityFactory, Integer, Integer)
  name.vb: CreateWorldBoundaries(EntityFactory, Integer, Integer)
references:
- uid: ECS.Core
  commentId: N:ECS.Core
  href: ECS.html
  name: ECS.Core
  nameWithType: ECS.Core
  fullName: ECS.Core
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Core
    name: Core
    href: ECS.Core.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Core
    name: Core
    href: ECS.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ECS.Core.World
  commentId: T:ECS.Core.World
  parent: ECS.Core
  href: ECS.Core.World.html
  name: World
  nameWithType: World
  fullName: ECS.Core.World
- uid: ECS.Core.EntityFactory.#ctor*
  commentId: Overload:ECS.Core.EntityFactory.#ctor
  href: ECS.Core.EntityFactory.html#ECS_Core_EntityFactory__ctor_ECS_Core_World_
  name: EntityFactory
  nameWithType: EntityFactory.EntityFactory
  fullName: ECS.Core.EntityFactory.EntityFactory
  nameWithType.vb: EntityFactory.New
  fullName.vb: ECS.Core.EntityFactory.New
  name.vb: New
- uid: ECS.Core.EntityFactory.CreateGameStateEntity*
  commentId: Overload:ECS.Core.EntityFactory.CreateGameStateEntity
  href: ECS.Core.EntityFactory.html#ECS_Core_EntityFactory_CreateGameStateEntity
  name: CreateGameStateEntity
  nameWithType: EntityFactory.CreateGameStateEntity
  fullName: ECS.Core.EntityFactory.CreateGameStateEntity
- uid: ECS.Core.Entity
  commentId: T:ECS.Core.Entity
  parent: ECS.Core
  href: ECS.Core.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: ECS.Core.Entity
- uid: ECS.Core.EntityFactory.CreateEntityFromConfig*
  commentId: Overload:ECS.Core.EntityFactory.CreateEntityFromConfig
  href: ECS.Core.EntityFactory.html#ECS_Core_EntityFactory_CreateEntityFromConfig_ECS_Resources_EntityConfig_Microsoft_Xna_Framework_Graphics_Texture2D_ECS_Components_Animation_AnimationConfig_ECS_Components_Input_InputConfig_
  name: CreateEntityFromConfig
  nameWithType: EntityFactory.CreateEntityFromConfig
  fullName: ECS.Core.EntityFactory.CreateEntityFromConfig
- uid: ECS.Resources.EntityConfig
  commentId: T:ECS.Resources.EntityConfig
  parent: ECS.Resources
  href: ECS.Resources.EntityConfig.html
  name: EntityConfig
  nameWithType: EntityConfig
  fullName: ECS.Resources.EntityConfig
- uid: Microsoft.Xna.Framework.Graphics.Texture2D
  commentId: T:Microsoft.Xna.Framework.Graphics.Texture2D
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: Microsoft.Xna.Framework.Graphics.Texture2D
- uid: ECS.Components.Animation.AnimationConfig
  commentId: T:ECS.Components.Animation.AnimationConfig
  parent: ECS.Components.Animation
  href: ECS.Components.Animation.AnimationConfig.html
  name: AnimationConfig
  nameWithType: AnimationConfig
  fullName: ECS.Components.Animation.AnimationConfig
- uid: ECS.Components.Input.InputConfig
  commentId: T:ECS.Components.Input.InputConfig
  parent: ECS.Components.Input
  href: ECS.Components.Input.InputConfig.html
  name: InputConfig
  nameWithType: InputConfig
  fullName: ECS.Components.Input.InputConfig
- uid: ECS.Resources
  commentId: N:ECS.Resources
  href: ECS.html
  name: ECS.Resources
  nameWithType: ECS.Resources
  fullName: ECS.Resources
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Resources
    name: Resources
    href: ECS.Resources.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Resources
    name: Resources
    href: ECS.Resources.html
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: ECS.Components.Animation
  commentId: N:ECS.Components.Animation
  href: ECS.html
  name: ECS.Components.Animation
  nameWithType: ECS.Components.Animation
  fullName: ECS.Components.Animation
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Components
    name: Components
    href: ECS.Components.html
  - name: .
  - uid: ECS.Components.Animation
    name: Animation
    href: ECS.Components.Animation.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Components
    name: Components
    href: ECS.Components.html
  - name: .
  - uid: ECS.Components.Animation
    name: Animation
    href: ECS.Components.Animation.html
- uid: ECS.Components.Input
  commentId: N:ECS.Components.Input
  href: ECS.html
  name: ECS.Components.Input
  nameWithType: ECS.Components.Input
  fullName: ECS.Components.Input
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Components
    name: Components
    href: ECS.Components.html
  - name: .
  - uid: ECS.Components.Input
    name: Input
    href: ECS.Components.Input.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Components
    name: Components
    href: ECS.Components.html
  - name: .
  - uid: ECS.Components.Input
    name: Input
    href: ECS.Components.Input.html
- uid: ECS.Core.EntityFactory.CreatePlayerFromConfig*
  commentId: Overload:ECS.Core.EntityFactory.CreatePlayerFromConfig
  href: ECS.Core.EntityFactory.html#ECS_Core_EntityFactory_CreatePlayerFromConfig_ECS_Resources_EntityConfig_Microsoft_Xna_Framework_Graphics_Texture2D_ECS_Components_Animation_AnimationConfig_ECS_Components_Input_InputConfig_
  name: CreatePlayerFromConfig
  nameWithType: EntityFactory.CreatePlayerFromConfig
  fullName: ECS.Core.EntityFactory.CreatePlayerFromConfig
- uid: ECS.Core.EntityFactory.CreateAIFromConfig*
  commentId: Overload:ECS.Core.EntityFactory.CreateAIFromConfig
  href: ECS.Core.EntityFactory.html#ECS_Core_EntityFactory_CreateAIFromConfig_ECS_Resources_EntityConfig_Microsoft_Xna_Framework_Graphics_Texture2D_ECS_Components_Animation_AnimationConfig_
  name: CreateAIFromConfig
  nameWithType: EntityFactory.CreateAIFromConfig
  fullName: ECS.Core.EntityFactory.CreateAIFromConfig
- uid: ECS.Core.EntityFactory.CreateProjectileFromConfig*
  commentId: Overload:ECS.Core.EntityFactory.CreateProjectileFromConfig
  href: ECS.Core.EntityFactory.html#ECS_Core_EntityFactory_CreateProjectileFromConfig_ECS_Resources_EntityConfig_Microsoft_Xna_Framework_Graphics_Texture2D_ECS_Components_Animation_AnimationConfig_Microsoft_Xna_Framework_Vector2_System_Boolean_
  name: CreateProjectileFromConfig
  nameWithType: EntityFactory.CreateProjectileFromConfig
  fullName: ECS.Core.EntityFactory.CreateProjectileFromConfig
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: ECS.Core.EntityFactory.CreateLine*
  commentId: Overload:ECS.Core.EntityFactory.CreateLine
  href: ECS.Core.EntityFactory.html#ECS_Core_EntityFactory_CreateLine_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_
  name: CreateLine
  nameWithType: EntityFactory.CreateLine
  fullName: ECS.Core.EntityFactory.CreateLine
- uid: ECS.Core.EntityFactory.CreateProjectile*
  commentId: Overload:ECS.Core.EntityFactory.CreateProjectile
  href: ECS.Core.EntityFactory.html#ECS_Core_EntityFactory_CreateProjectile_Microsoft_Xna_Framework_Graphics_Texture2D_ECS_Components_Animation_AnimationConfig_Microsoft_Xna_Framework_Vector2_System_Boolean_
  name: CreateProjectile
  nameWithType: EntityFactory.CreateProjectile
  fullName: ECS.Core.EntityFactory.CreateProjectile
- uid: ECS.Core.EntityFactory.CreateWorldBoundaries*
  commentId: Overload:ECS.Core.EntityFactory.CreateWorldBoundaries
  href: ECS.Core.EntityFactory.html#ECS_Core_EntityFactory_CreateWorldBoundaries_ECS_Core_EntityFactory_System_Int32_System_Int32_
  name: CreateWorldBoundaries
  nameWithType: EntityFactory.CreateWorldBoundaries
  fullName: ECS.Core.EntityFactory.CreateWorldBoundaries
- uid: ECS.Core.EntityFactory
  commentId: T:ECS.Core.EntityFactory
  parent: ECS.Core
  href: ECS.Core.EntityFactory.html
  name: EntityFactory
  nameWithType: EntityFactory
  fullName: ECS.Core.EntityFactory
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
