### YamlMime:ManagedReference
items:
- uid: ECS.Core.EventBus
  commentId: T:ECS.Core.EventBus
  id: EventBus
  parent: ECS.Core
  children:
  - ECS.Core.EventBus.Publish``1(``0)
  - ECS.Core.EventBus.Subscribe``1(System.Action{ECS.Events.IEvent})
  - ECS.Core.EventBus.subscribers
  langs:
  - csharp
  - vb
  name: EventBus
  nameWithType: EventBus
  fullName: ECS.Core.EventBus
  type: Class
  source:
    remote:
      path: Core/EventBus.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: EventBus
    path: ../Core/EventBus.cs
    startLine: 7
  assemblies:
  - ECS
  namespace: ECS.Core
  summary: >-
    The event bus, a central system for managing event publication and subscription.

    Any subscriber to the type will recieve the published event.

    Each <xref href="System.Action" data-throw-if-not-resolved="false"></xref> handles an event of type <xref href="ECS.Events.IEvent" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public class EventBus
    content.vb: Public Class EventBus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ECS.Core.EventBus.subscribers
  commentId: F:ECS.Core.EventBus.subscribers
  id: subscribers
  parent: ECS.Core.EventBus
  langs:
  - csharp
  - vb
  name: subscribers
  nameWithType: EventBus.subscribers
  fullName: ECS.Core.EventBus.subscribers
  type: Field
  source:
    remote:
      path: Core/EventBus.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: subscribers
    path: ../Core/EventBus.cs
    startLine: 12
  assemblies:
  - ECS
  namespace: ECS.Core
  summary: Dictionary to store all subscriber delegates for each type of <xref href="ECS.Events.IEvent" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: private Dictionary<Type, List<Action<IEvent>>> subscribers
    return:
      type: System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.List{System.Action{ECS.Events.IEvent}}}
    content.vb: Private subscribers As Dictionary(Of Type, List(Of Action(Of IEvent)))
- uid: ECS.Core.EventBus.Publish``1(``0)
  commentId: M:ECS.Core.EventBus.Publish``1(``0)
  id: Publish``1(``0)
  parent: ECS.Core.EventBus
  langs:
  - csharp
  - vb
  name: Publish<T>(T)
  nameWithType: EventBus.Publish<T>(T)
  fullName: ECS.Core.EventBus.Publish<T>(T)
  type: Method
  source:
    remote:
      path: Core/EventBus.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: Publish
    path: ../Core/EventBus.cs
    startLine: 20
  assemblies:
  - ECS
  namespace: ECS.Core
  summary: >-
    Publishes an <xref href="ECS.Events.IEvent" data-throw-if-not-resolved="false"></xref> to all subscribers of that event type <code class="typeparamref">T</code>.

    Iterates over the list of subscribers for the event type and invokes each handler with the event data.
  example: []
  syntax:
    content: 'public void Publish<T>(T eventData) where T : IEvent'
    parameters:
    - id: eventData
      type: '{T}'
      description: The data associated with the event being published.
    typeParameters:
    - id: T
      description: The type of the event being published.
    content.vb: Public Sub Publish(Of T As IEvent)(eventData As T)
  overload: ECS.Core.EventBus.Publish*
  nameWithType.vb: EventBus.Publish(Of T)(T)
  fullName.vb: ECS.Core.EventBus.Publish(Of T)(T)
  name.vb: Publish(Of T)(T)
- uid: ECS.Core.EventBus.Subscribe``1(System.Action{ECS.Events.IEvent})
  commentId: M:ECS.Core.EventBus.Subscribe``1(System.Action{ECS.Events.IEvent})
  id: Subscribe``1(System.Action{ECS.Events.IEvent})
  parent: ECS.Core.EventBus
  langs:
  - csharp
  - vb
  name: Subscribe<T>(Action<IEvent>)
  nameWithType: EventBus.Subscribe<T>(Action<IEvent>)
  fullName: ECS.Core.EventBus.Subscribe<T>(System.Action<ECS.Events.IEvent>)
  type: Method
  source:
    remote:
      path: Core/EventBus.cs
      branch: Sprint3
      repo: https://github.com/zehdari/TeamGame
    id: Subscribe
    path: ../Core/EventBus.cs
    startLine: 40
  assemblies:
  - ECS
  namespace: ECS.Core
  summary: Subscribes a handler to a specific event type <code class="typeparamref">T</code>.
  example: []
  syntax:
    content: 'public void Subscribe<T>(Action<IEvent> handler) where T : IEvent'
    parameters:
    - id: handler
      type: System.Action{ECS.Events.IEvent}
      description: The delegate to be executed when the event is published.
    typeParameters:
    - id: T
      description: The type of the event being subscribed to.
    content.vb: Public Sub Subscribe(Of T As IEvent)(handler As Action(Of IEvent))
  overload: ECS.Core.EventBus.Subscribe*
  nameWithType.vb: EventBus.Subscribe(Of T)(Action(Of IEvent))
  fullName.vb: ECS.Core.EventBus.Subscribe(Of T)(System.Action(Of ECS.Events.IEvent))
  name.vb: Subscribe(Of T)(Action(Of IEvent))
references:
- uid: System.Action
  commentId: T:System.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: ECS.Events.IEvent
  commentId: T:ECS.Events.IEvent
  parent: ECS.Events
  href: ECS.Events.IEvent.html
  name: IEvent
  nameWithType: IEvent
  fullName: ECS.Events.IEvent
- uid: ECS.Core
  commentId: N:ECS.Core
  href: ECS.html
  name: ECS.Core
  nameWithType: ECS.Core
  fullName: ECS.Core
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Core
    name: Core
    href: ECS.Core.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Core
    name: Core
    href: ECS.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ECS.Events
  commentId: N:ECS.Events
  href: ECS.html
  name: ECS.Events
  nameWithType: ECS.Events
  fullName: ECS.Events
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Events
    name: Events
    href: ECS.Events.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Events
    name: Events
    href: ECS.Events.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.List{System.Action{ECS.Events.IEvent}}}
  commentId: T:System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.List{System.Action{ECS.Events.IEvent}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Type, List<Action<IEvent>>>
  nameWithType: Dictionary<Type, List<Action<IEvent>>>
  fullName: System.Collections.Generic.Dictionary<System.Type, System.Collections.Generic.List<System.Action<ECS.Events.IEvent>>>
  nameWithType.vb: Dictionary(Of Type, List(Of Action(Of IEvent)))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, System.Collections.Generic.List(Of System.Action(Of ECS.Events.IEvent)))
  name.vb: Dictionary(Of Type, List(Of Action(Of IEvent)))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: ECS.Events.IEvent
    name: IEvent
    href: ECS.Events.IEvent.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: ECS.Events.IEvent
    name: IEvent
    href: ECS.Events.IEvent.html
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ECS.Core.EventBus.Publish*
  commentId: Overload:ECS.Core.EventBus.Publish
  href: ECS.Core.EventBus.html#ECS_Core_EventBus_Publish__1___0_
  name: Publish
  nameWithType: EventBus.Publish
  fullName: ECS.Core.EventBus.Publish
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: ECS.Core.EventBus.Subscribe*
  commentId: Overload:ECS.Core.EventBus.Subscribe
  href: ECS.Core.EventBus.html#ECS_Core_EventBus_Subscribe__1_System_Action_ECS_Events_IEvent__
  name: Subscribe
  nameWithType: EventBus.Subscribe
  fullName: ECS.Core.EventBus.Subscribe
- uid: System.Action{ECS.Events.IEvent}
  commentId: T:System.Action{ECS.Events.IEvent}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IEvent>
  nameWithType: Action<IEvent>
  fullName: System.Action<ECS.Events.IEvent>
  nameWithType.vb: Action(Of IEvent)
  fullName.vb: System.Action(Of ECS.Events.IEvent)
  name.vb: Action(Of IEvent)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: ECS.Events.IEvent
    name: IEvent
    href: ECS.Events.IEvent.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: ECS.Events.IEvent
    name: IEvent
    href: ECS.Events.IEvent.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
