### YamlMime:ManagedReference
items:
- uid: ECS.Systems.AI.PhysicsAwarePathfinding
  commentId: T:ECS.Systems.AI.PhysicsAwarePathfinding
  id: PhysicsAwarePathfinding
  parent: ECS.Systems.AI
  children:
  - ECS.Systems.AI.PhysicsAwarePathfinding.#ctor(ECS.Core.World)
  - ECS.Systems.AI.PhysicsAwarePathfinding.CalculateCollisionBounds(ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position)
  - ECS.Systems.AI.PhysicsAwarePathfinding.EstimateMaxHeight(System.Single,System.Single)
  - ECS.Systems.AI.PhysicsAwarePathfinding.FindSafePosition(Microsoft.Xna.Framework.Vector2)
  - ECS.Systems.AI.PhysicsAwarePathfinding.GRAVITY_ACCELERATION
  - ECS.Systems.AI.PhysicsAwarePathfinding.GRID_CELL_SIZE
  - ECS.Systems.AI.PhysicsAwarePathfinding.GenerateLevelRepresentation
  - ECS.Systems.AI.PhysicsAwarePathfinding.GetActionsFromPlan(ECS.Systems.AI.RecoveryPlan)
  - ECS.Systems.AI.PhysicsAwarePathfinding.GetEntityBounds(ECS.Core.Entity,ECS.Components.Physics.Position)
  - ECS.Systems.AI.PhysicsAwarePathfinding.GridToWorld(System.Int32,System.Int32)
  - ECS.Systems.AI.PhysicsAwarePathfinding.IsLikelyToLandOnPlatform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,ECS.Core.Entity@)
  - ECS.Systems.AI.PhysicsAwarePathfinding.IsPositionSafe(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  - ECS.Systems.AI.PhysicsAwarePathfinding.JUMP_FORCE
  - ECS.Systems.AI.PhysicsAwarePathfinding.MAX_PATH_LENGTH
  - ECS.Systems.AI.PhysicsAwarePathfinding.MAX_SIMULATION_TIME
  - ECS.Systems.AI.PhysicsAwarePathfinding.MOVE_FORCE
  - ECS.Systems.AI.PhysicsAwarePathfinding.PLATFORM_CLEARANCE
  - ECS.Systems.AI.PhysicsAwarePathfinding.PlanRecovery(ECS.Core.Entity,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  - ECS.Systems.AI.PhysicsAwarePathfinding.SIMULATION_STEP
  - ECS.Systems.AI.PhysicsAwarePathfinding.SimulatePath(ECS.Core.Entity,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,ECS.Systems.AI.RecoveryPlan)
  - ECS.Systems.AI.PhysicsAwarePathfinding.WorldToGrid(Microsoft.Xna.Framework.Vector2)
  - ECS.Systems.AI.PhysicsAwarePathfinding.collisionGrid
  - ECS.Systems.AI.PhysicsAwarePathfinding.gridHeight
  - ECS.Systems.AI.PhysicsAwarePathfinding.gridWidth
  - ECS.Systems.AI.PhysicsAwarePathfinding.platforms
  - ECS.Systems.AI.PhysicsAwarePathfinding.stageBounds
  - ECS.Systems.AI.PhysicsAwarePathfinding.world
  langs:
  - csharp
  - vb
  name: PhysicsAwarePathfinding
  nameWithType: PhysicsAwarePathfinding
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding
  type: Class
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: PhysicsAwarePathfinding
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 9
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: public class PhysicsAwarePathfinding
    content.vb: Public Class PhysicsAwarePathfinding
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.world
  commentId: F:ECS.Systems.AI.PhysicsAwarePathfinding.world
  id: world
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: world
  nameWithType: PhysicsAwarePathfinding.world
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.world
  type: Field
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: world
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 11
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: private readonly World world
    return:
      type: ECS.Core.World
    content.vb: Private ReadOnly world As World
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.GRID_CELL_SIZE
  commentId: F:ECS.Systems.AI.PhysicsAwarePathfinding.GRID_CELL_SIZE
  id: GRID_CELL_SIZE
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: GRID_CELL_SIZE
  nameWithType: PhysicsAwarePathfinding.GRID_CELL_SIZE
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.GRID_CELL_SIZE
  type: Field
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: GRID_CELL_SIZE
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 14
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: private const int GRID_CELL_SIZE = 32
    return:
      type: System.Int32
    content.vb: Private Const GRID_CELL_SIZE As Integer = 32
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.MAX_PATH_LENGTH
  commentId: F:ECS.Systems.AI.PhysicsAwarePathfinding.MAX_PATH_LENGTH
  id: MAX_PATH_LENGTH
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: MAX_PATH_LENGTH
  nameWithType: PhysicsAwarePathfinding.MAX_PATH_LENGTH
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.MAX_PATH_LENGTH
  type: Field
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: MAX_PATH_LENGTH
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 15
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: private const int MAX_PATH_LENGTH = 60
    return:
      type: System.Int32
    content.vb: Private Const MAX_PATH_LENGTH As Integer = 60
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.PLATFORM_CLEARANCE
  commentId: F:ECS.Systems.AI.PhysicsAwarePathfinding.PLATFORM_CLEARANCE
  id: PLATFORM_CLEARANCE
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: PLATFORM_CLEARANCE
  nameWithType: PhysicsAwarePathfinding.PLATFORM_CLEARANCE
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.PLATFORM_CLEARANCE
  type: Field
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: PLATFORM_CLEARANCE
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 16
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: private const float PLATFORM_CLEARANCE = 50
    return:
      type: System.Single
    content.vb: Private Const PLATFORM_CLEARANCE As Single = 50
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.GRAVITY_ACCELERATION
  commentId: F:ECS.Systems.AI.PhysicsAwarePathfinding.GRAVITY_ACCELERATION
  id: GRAVITY_ACCELERATION
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: GRAVITY_ACCELERATION
  nameWithType: PhysicsAwarePathfinding.GRAVITY_ACCELERATION
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.GRAVITY_ACCELERATION
  type: Field
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: GRAVITY_ACCELERATION
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 19
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: private const float GRAVITY_ACCELERATION = 1000
    return:
      type: System.Single
    content.vb: Private Const GRAVITY_ACCELERATION As Single = 1000
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.SIMULATION_STEP
  commentId: F:ECS.Systems.AI.PhysicsAwarePathfinding.SIMULATION_STEP
  id: SIMULATION_STEP
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: SIMULATION_STEP
  nameWithType: PhysicsAwarePathfinding.SIMULATION_STEP
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.SIMULATION_STEP
  type: Field
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: SIMULATION_STEP
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 20
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: private const float SIMULATION_STEP = 0.05
    return:
      type: System.Single
    content.vb: Private Const SIMULATION_STEP As Single = 0.05
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.MAX_SIMULATION_TIME
  commentId: F:ECS.Systems.AI.PhysicsAwarePathfinding.MAX_SIMULATION_TIME
  id: MAX_SIMULATION_TIME
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: MAX_SIMULATION_TIME
  nameWithType: PhysicsAwarePathfinding.MAX_SIMULATION_TIME
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.MAX_SIMULATION_TIME
  type: Field
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: MAX_SIMULATION_TIME
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 21
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: private const float MAX_SIMULATION_TIME = 3
    return:
      type: System.Single
    content.vb: Private Const MAX_SIMULATION_TIME As Single = 3
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.JUMP_FORCE
  commentId: F:ECS.Systems.AI.PhysicsAwarePathfinding.JUMP_FORCE
  id: JUMP_FORCE
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: JUMP_FORCE
  nameWithType: PhysicsAwarePathfinding.JUMP_FORCE
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.JUMP_FORCE
  type: Field
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: JUMP_FORCE
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 22
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: private const float JUMP_FORCE = 700
    return:
      type: System.Single
    content.vb: Private Const JUMP_FORCE As Single = 700
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.MOVE_FORCE
  commentId: F:ECS.Systems.AI.PhysicsAwarePathfinding.MOVE_FORCE
  id: MOVE_FORCE
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: MOVE_FORCE
  nameWithType: PhysicsAwarePathfinding.MOVE_FORCE
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.MOVE_FORCE
  type: Field
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: MOVE_FORCE
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 23
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: private const float MOVE_FORCE = 300
    return:
      type: System.Single
    content.vb: Private Const MOVE_FORCE As Single = 300
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.collisionGrid
  commentId: F:ECS.Systems.AI.PhysicsAwarePathfinding.collisionGrid
  id: collisionGrid
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: collisionGrid
  nameWithType: PhysicsAwarePathfinding.collisionGrid
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.collisionGrid
  type: Field
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: collisionGrid
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 26
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: private bool[,] collisionGrid
    return:
      type: System.Boolean[,]
    content.vb: Private collisionGrid As Boolean(,)
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.gridWidth
  commentId: F:ECS.Systems.AI.PhysicsAwarePathfinding.gridWidth
  id: gridWidth
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: gridWidth
  nameWithType: PhysicsAwarePathfinding.gridWidth
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.gridWidth
  type: Field
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: gridWidth
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 27
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: private int gridWidth
    return:
      type: System.Int32
    content.vb: Private gridWidth As Integer
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.gridHeight
  commentId: F:ECS.Systems.AI.PhysicsAwarePathfinding.gridHeight
  id: gridHeight
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: gridHeight
  nameWithType: PhysicsAwarePathfinding.gridHeight
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.gridHeight
  type: Field
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: gridHeight
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 28
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: private int gridHeight
    return:
      type: System.Int32
    content.vb: Private gridHeight As Integer
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.platforms
  commentId: F:ECS.Systems.AI.PhysicsAwarePathfinding.platforms
  id: platforms
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: platforms
  nameWithType: PhysicsAwarePathfinding.platforms
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.platforms
  type: Field
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: platforms
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 29
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: private List<(Entity entity, Rectangle bounds)> platforms
    return:
      type: System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,Microsoft.Xna.Framework.Rectangle}}
    content.vb: Private platforms As List(Of (entity As Entity, bounds As Rectangle))
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.stageBounds
  commentId: F:ECS.Systems.AI.PhysicsAwarePathfinding.stageBounds
  id: stageBounds
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: stageBounds
  nameWithType: PhysicsAwarePathfinding.stageBounds
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.stageBounds
  type: Field
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: stageBounds
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 30
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: private Rectangle stageBounds
    return:
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: Private stageBounds As Rectangle
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.#ctor(ECS.Core.World)
  commentId: M:ECS.Systems.AI.PhysicsAwarePathfinding.#ctor(ECS.Core.World)
  id: '#ctor(ECS.Core.World)'
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: PhysicsAwarePathfinding(World)
  nameWithType: PhysicsAwarePathfinding.PhysicsAwarePathfinding(World)
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.PhysicsAwarePathfinding(ECS.Core.World)
  type: Constructor
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: .ctor
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 32
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  syntax:
    content: public PhysicsAwarePathfinding(World world)
    parameters:
    - id: world
      type: ECS.Core.World
    content.vb: Public Sub New(world As World)
  overload: ECS.Systems.AI.PhysicsAwarePathfinding.#ctor*
  nameWithType.vb: PhysicsAwarePathfinding.New(World)
  fullName.vb: ECS.Systems.AI.PhysicsAwarePathfinding.New(ECS.Core.World)
  name.vb: New(World)
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.GenerateLevelRepresentation
  commentId: M:ECS.Systems.AI.PhysicsAwarePathfinding.GenerateLevelRepresentation
  id: GenerateLevelRepresentation
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: GenerateLevelRepresentation()
  nameWithType: PhysicsAwarePathfinding.GenerateLevelRepresentation()
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.GenerateLevelRepresentation()
  type: Method
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: GenerateLevelRepresentation
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 41
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  summary: Generate a representation of the level for pathfinding
  example: []
  syntax:
    content: public void GenerateLevelRepresentation()
    content.vb: Public Sub GenerateLevelRepresentation()
  overload: ECS.Systems.AI.PhysicsAwarePathfinding.GenerateLevelRepresentation*
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.GetEntityBounds(ECS.Core.Entity,ECS.Components.Physics.Position)
  commentId: M:ECS.Systems.AI.PhysicsAwarePathfinding.GetEntityBounds(ECS.Core.Entity,ECS.Components.Physics.Position)
  id: GetEntityBounds(ECS.Core.Entity,ECS.Components.Physics.Position)
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: GetEntityBounds(Entity, Position)
  nameWithType: PhysicsAwarePathfinding.GetEntityBounds(Entity, Position)
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.GetEntityBounds(ECS.Core.Entity, ECS.Components.Physics.Position)
  type: Method
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: GetEntityBounds
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 117
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  summary: Get the approximate bounds of an entity
  example: []
  syntax:
    content: private Rectangle GetEntityBounds(Entity entity, Position position)
    parameters:
    - id: entity
      type: ECS.Core.Entity
    - id: position
      type: ECS.Components.Physics.Position
    return:
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: Private Function GetEntityBounds(entity As Entity, position As Position) As Rectangle
  overload: ECS.Systems.AI.PhysicsAwarePathfinding.GetEntityBounds*
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.CalculateCollisionBounds(ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position)
  commentId: M:ECS.Systems.AI.PhysicsAwarePathfinding.CalculateCollisionBounds(ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position)
  id: CalculateCollisionBounds(ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position)
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: CalculateCollisionBounds(Entity, CollisionBody, Position)
  nameWithType: PhysicsAwarePathfinding.CalculateCollisionBounds(Entity, CollisionBody, Position)
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.CalculateCollisionBounds(ECS.Core.Entity, ECS.Components.Collision.CollisionBody, ECS.Components.Physics.Position)
  type: Method
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: CalculateCollisionBounds
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 136
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  summary: Calculate bounds from collision body
  example: []
  syntax:
    content: private Rectangle CalculateCollisionBounds(Entity entity, CollisionBody body, Position position)
    parameters:
    - id: entity
      type: ECS.Core.Entity
    - id: body
      type: ECS.Components.Collision.CollisionBody
    - id: position
      type: ECS.Components.Physics.Position
    return:
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: Private Function CalculateCollisionBounds(entity As Entity, body As CollisionBody, position As Position) As Rectangle
  overload: ECS.Systems.AI.PhysicsAwarePathfinding.CalculateCollisionBounds*
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.WorldToGrid(Microsoft.Xna.Framework.Vector2)
  commentId: M:ECS.Systems.AI.PhysicsAwarePathfinding.WorldToGrid(Microsoft.Xna.Framework.Vector2)
  id: WorldToGrid(Microsoft.Xna.Framework.Vector2)
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: WorldToGrid(Vector2)
  nameWithType: PhysicsAwarePathfinding.WorldToGrid(Vector2)
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.WorldToGrid(Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: WorldToGrid
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 166
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  summary: Convert world position to grid cell
  example: []
  syntax:
    content: private (int, int) WorldToGrid(Vector2 position)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector2
    return:
      type: System.ValueTuple{System.Int32,System.Int32}
    content.vb: Private Function WorldToGrid(position As Vector2) As (Integer, Integer)
  overload: ECS.Systems.AI.PhysicsAwarePathfinding.WorldToGrid*
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.GridToWorld(System.Int32,System.Int32)
  commentId: M:ECS.Systems.AI.PhysicsAwarePathfinding.GridToWorld(System.Int32,System.Int32)
  id: GridToWorld(System.Int32,System.Int32)
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: GridToWorld(int, int)
  nameWithType: PhysicsAwarePathfinding.GridToWorld(int, int)
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.GridToWorld(int, int)
  type: Method
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: GridToWorld
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 180
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  summary: Convert grid cell to world position
  example: []
  syntax:
    content: private Vector2 GridToWorld(int x, int y)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Private Function GridToWorld(x As Integer, y As Integer) As Vector2
  overload: ECS.Systems.AI.PhysicsAwarePathfinding.GridToWorld*
  nameWithType.vb: PhysicsAwarePathfinding.GridToWorld(Integer, Integer)
  fullName.vb: ECS.Systems.AI.PhysicsAwarePathfinding.GridToWorld(Integer, Integer)
  name.vb: GridToWorld(Integer, Integer)
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.PlanRecovery(ECS.Core.Entity,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  commentId: M:ECS.Systems.AI.PhysicsAwarePathfinding.PlanRecovery(ECS.Core.Entity,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  id: PlanRecovery(ECS.Core.Entity,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: PlanRecovery(Entity, Vector2, Vector2)
  nameWithType: PhysicsAwarePathfinding.PlanRecovery(Entity, Vector2, Vector2)
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.PlanRecovery(ECS.Core.Entity, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: PlanRecovery
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 191
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  summary: Plan a recovery path accounting for physics
  example: []
  syntax:
    content: public RecoveryPlan PlanRecovery(Entity entity, Vector2 position, Vector2 velocity)
    parameters:
    - id: entity
      type: ECS.Core.Entity
    - id: position
      type: Microsoft.Xna.Framework.Vector2
    - id: velocity
      type: Microsoft.Xna.Framework.Vector2
    return:
      type: ECS.Systems.AI.RecoveryPlan
    content.vb: Public Function PlanRecovery(entity As Entity, position As Vector2, velocity As Vector2) As RecoveryPlan
  overload: ECS.Systems.AI.PhysicsAwarePathfinding.PlanRecovery*
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.FindSafePosition(Microsoft.Xna.Framework.Vector2)
  commentId: M:ECS.Systems.AI.PhysicsAwarePathfinding.FindSafePosition(Microsoft.Xna.Framework.Vector2)
  id: FindSafePosition(Microsoft.Xna.Framework.Vector2)
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: FindSafePosition(Vector2)
  nameWithType: PhysicsAwarePathfinding.FindSafePosition(Vector2)
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.FindSafePosition(Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: FindSafePosition
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 280
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  summary: Find a safe position on stage for recovery
  example: []
  syntax:
    content: private Vector2 FindSafePosition(Vector2 position)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector2
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Private Function FindSafePosition(position As Vector2) As Vector2
  overload: ECS.Systems.AI.PhysicsAwarePathfinding.FindSafePosition*
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.EstimateMaxHeight(System.Single,System.Single)
  commentId: M:ECS.Systems.AI.PhysicsAwarePathfinding.EstimateMaxHeight(System.Single,System.Single)
  id: EstimateMaxHeight(System.Single,System.Single)
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: EstimateMaxHeight(float, float)
  nameWithType: PhysicsAwarePathfinding.EstimateMaxHeight(float, float)
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.EstimateMaxHeight(float, float)
  type: Method
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: EstimateMaxHeight
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 319
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  summary: Estimate maximum height a character can reach with current vertical velocity
  example: []
  syntax:
    content: private float EstimateMaxHeight(float currentY, float currentVelY)
    parameters:
    - id: currentY
      type: System.Single
    - id: currentVelY
      type: System.Single
    return:
      type: System.Single
    content.vb: Private Function EstimateMaxHeight(currentY As Single, currentVelY As Single) As Single
  overload: ECS.Systems.AI.PhysicsAwarePathfinding.EstimateMaxHeight*
  nameWithType.vb: PhysicsAwarePathfinding.EstimateMaxHeight(Single, Single)
  fullName.vb: ECS.Systems.AI.PhysicsAwarePathfinding.EstimateMaxHeight(Single, Single)
  name.vb: EstimateMaxHeight(Single, Single)
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.IsLikelyToLandOnPlatform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,ECS.Core.Entity@)
  commentId: M:ECS.Systems.AI.PhysicsAwarePathfinding.IsLikelyToLandOnPlatform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,ECS.Core.Entity@)
  id: IsLikelyToLandOnPlatform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,ECS.Core.Entity@)
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: IsLikelyToLandOnPlatform(Vector2, Vector2, out Entity)
  nameWithType: PhysicsAwarePathfinding.IsLikelyToLandOnPlatform(Vector2, Vector2, out Entity)
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.IsLikelyToLandOnPlatform(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, out ECS.Core.Entity)
  type: Method
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: IsLikelyToLandOnPlatform
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 340
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  summary: Check if character will likely land on a platform with current trajectory
  example: []
  syntax:
    content: private bool IsLikelyToLandOnPlatform(Vector2 position, Vector2 velocity, out Entity platformEntity)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector2
    - id: velocity
      type: Microsoft.Xna.Framework.Vector2
    - id: platformEntity
      type: ECS.Core.Entity
    return:
      type: System.Boolean
    content.vb: Private Function IsLikelyToLandOnPlatform(position As Vector2, velocity As Vector2, platformEntity As Entity) As Boolean
  overload: ECS.Systems.AI.PhysicsAwarePathfinding.IsLikelyToLandOnPlatform*
  nameWithType.vb: PhysicsAwarePathfinding.IsLikelyToLandOnPlatform(Vector2, Vector2, Entity)
  fullName.vb: ECS.Systems.AI.PhysicsAwarePathfinding.IsLikelyToLandOnPlatform(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, ECS.Core.Entity)
  name.vb: IsLikelyToLandOnPlatform(Vector2, Vector2, Entity)
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.SimulatePath(ECS.Core.Entity,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,ECS.Systems.AI.RecoveryPlan)
  commentId: M:ECS.Systems.AI.PhysicsAwarePathfinding.SimulatePath(ECS.Core.Entity,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,ECS.Systems.AI.RecoveryPlan)
  id: SimulatePath(ECS.Core.Entity,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,ECS.Systems.AI.RecoveryPlan)
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: SimulatePath(Entity, Vector2, Vector2, RecoveryPlan)
  nameWithType: PhysicsAwarePathfinding.SimulatePath(Entity, Vector2, Vector2, RecoveryPlan)
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.SimulatePath(ECS.Core.Entity, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, ECS.Systems.AI.RecoveryPlan)
  type: Method
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: SimulatePath
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 370
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  summary: Simulate character movement and physics to validate a recovery plan
  example: []
  syntax:
    content: private (bool success, List<Vector2> path) SimulatePath(Entity entity, Vector2 position, Vector2 velocity, RecoveryPlan plan)
    parameters:
    - id: entity
      type: ECS.Core.Entity
    - id: position
      type: Microsoft.Xna.Framework.Vector2
    - id: velocity
      type: Microsoft.Xna.Framework.Vector2
    - id: plan
      type: ECS.Systems.AI.RecoveryPlan
    return:
      type: System.ValueTuple{System.Boolean,System.Collections.Generic.List{Microsoft.Xna.Framework.Vector2}}
    content.vb: Private Function SimulatePath(entity As Entity, position As Vector2, velocity As Vector2, plan As RecoveryPlan) As (success As Boolean, path As List(Of Vector2))
  overload: ECS.Systems.AI.PhysicsAwarePathfinding.SimulatePath*
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.IsPositionSafe(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  commentId: M:ECS.Systems.AI.PhysicsAwarePathfinding.IsPositionSafe(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  id: IsPositionSafe(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: IsPositionSafe(Vector2, Vector2)
  nameWithType: PhysicsAwarePathfinding.IsPositionSafe(Vector2, Vector2)
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.IsPositionSafe(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: IsPositionSafe
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 449
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  summary: Check if a position is safe (on stage and near target position)
  example: []
  syntax:
    content: private bool IsPositionSafe(Vector2 position, Vector2 safePosition)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector2
    - id: safePosition
      type: Microsoft.Xna.Framework.Vector2
    return:
      type: System.Boolean
    content.vb: Private Function IsPositionSafe(position As Vector2, safePosition As Vector2) As Boolean
  overload: ECS.Systems.AI.PhysicsAwarePathfinding.IsPositionSafe*
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.GetActionsFromPlan(ECS.Systems.AI.RecoveryPlan)
  commentId: M:ECS.Systems.AI.PhysicsAwarePathfinding.GetActionsFromPlan(ECS.Systems.AI.RecoveryPlan)
  id: GetActionsFromPlan(ECS.Systems.AI.RecoveryPlan)
  parent: ECS.Systems.AI.PhysicsAwarePathfinding
  langs:
  - csharp
  - vb
  name: GetActionsFromPlan(RecoveryPlan)
  nameWithType: PhysicsAwarePathfinding.GetActionsFromPlan(RecoveryPlan)
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.GetActionsFromPlan(ECS.Systems.AI.RecoveryPlan)
  type: Method
  source:
    remote:
      path: Systems/AI/AIPathFinding.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: GetActionsFromPlan
    path: ../Systems/AI/AIPathFinding.cs
    startLine: 465
  assemblies:
  - ECS
  namespace: ECS.Systems.AI
  summary: Convert a recovery plan to a list of executable actions
  example: []
  syntax:
    content: public List<string> GetActionsFromPlan(RecoveryPlan plan)
    parameters:
    - id: plan
      type: ECS.Systems.AI.RecoveryPlan
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Function GetActionsFromPlan(plan As RecoveryPlan) As List(Of String)
  overload: ECS.Systems.AI.PhysicsAwarePathfinding.GetActionsFromPlan*
references:
- uid: ECS.Systems.AI
  commentId: N:ECS.Systems.AI
  href: ECS.html
  name: ECS.Systems.AI
  nameWithType: ECS.Systems.AI
  fullName: ECS.Systems.AI
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Systems
    name: Systems
    href: ECS.Systems.html
  - name: .
  - uid: ECS.Systems.AI
    name: AI
    href: ECS.Systems.AI.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Systems
    name: Systems
    href: ECS.Systems.html
  - name: .
  - uid: ECS.Systems.AI
    name: AI
    href: ECS.Systems.AI.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ECS.Core.World
  commentId: T:ECS.Core.World
  parent: ECS.Core
  href: ECS.Core.World.html
  name: World
  nameWithType: World
  fullName: ECS.Core.World
- uid: ECS.Core
  commentId: N:ECS.Core
  href: ECS.html
  name: ECS.Core
  nameWithType: ECS.Core
  fullName: ECS.Core
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Core
    name: Core
    href: ECS.Core.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Core
    name: Core
    href: ECS.Core.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[,]
  nameWithType: bool[,]
  fullName: bool[,]
  nameWithType.vb: Boolean(,)
  fullName.vb: Boolean(,)
  name.vb: Boolean(,)
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: ','
  - name: )
- uid: System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,Microsoft.Xna.Framework.Rectangle}}
  commentId: T:System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,Microsoft.Xna.Framework.Rectangle}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<(Entity entity, Rectangle bounds)>
  nameWithType: List<(Entity entity, Rectangle bounds)>
  fullName: System.Collections.Generic.List<(ECS.Core.Entity entity, Microsoft.Xna.Framework.Rectangle bounds)>
  nameWithType.vb: List(Of (entity As Entity, bounds As Rectangle))
  fullName.vb: System.Collections.Generic.List(Of (entity As ECS.Core.Entity, bounds As Microsoft.Xna.Framework.Rectangle))
  name.vb: List(Of (entity As Entity, bounds As Rectangle))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: " "
  - uid: System.ValueTuple{ECS.Core.Entity,Microsoft.Xna.Framework.Rectangle}.entity
    name: entity
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-ecs.core.entity,microsoft.xna.framework.rectangle-.entity
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{ECS.Core.Entity,Microsoft.Xna.Framework.Rectangle}.bounds
    name: bounds
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-ecs.core.entity,microsoft.xna.framework.rectangle-.bounds
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{ECS.Core.Entity,Microsoft.Xna.Framework.Rectangle}.entity
    name: entity
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-ecs.core.entity,microsoft.xna.framework.rectangle-.entity
  - name: " "
  - name: As
  - name: " "
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{ECS.Core.Entity,Microsoft.Xna.Framework.Rectangle}.bounds
    name: bounds
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-ecs.core.entity,microsoft.xna.framework.rectangle-.bounds
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.#ctor*
  commentId: Overload:ECS.Systems.AI.PhysicsAwarePathfinding.#ctor
  href: ECS.Systems.AI.PhysicsAwarePathfinding.html#ECS_Systems_AI_PhysicsAwarePathfinding__ctor_ECS_Core_World_
  name: PhysicsAwarePathfinding
  nameWithType: PhysicsAwarePathfinding.PhysicsAwarePathfinding
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.PhysicsAwarePathfinding
  nameWithType.vb: PhysicsAwarePathfinding.New
  fullName.vb: ECS.Systems.AI.PhysicsAwarePathfinding.New
  name.vb: New
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.GenerateLevelRepresentation*
  commentId: Overload:ECS.Systems.AI.PhysicsAwarePathfinding.GenerateLevelRepresentation
  href: ECS.Systems.AI.PhysicsAwarePathfinding.html#ECS_Systems_AI_PhysicsAwarePathfinding_GenerateLevelRepresentation
  name: GenerateLevelRepresentation
  nameWithType: PhysicsAwarePathfinding.GenerateLevelRepresentation
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.GenerateLevelRepresentation
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.GetEntityBounds*
  commentId: Overload:ECS.Systems.AI.PhysicsAwarePathfinding.GetEntityBounds
  href: ECS.Systems.AI.PhysicsAwarePathfinding.html#ECS_Systems_AI_PhysicsAwarePathfinding_GetEntityBounds_ECS_Core_Entity_ECS_Components_Physics_Position_
  name: GetEntityBounds
  nameWithType: PhysicsAwarePathfinding.GetEntityBounds
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.GetEntityBounds
- uid: ECS.Core.Entity
  commentId: T:ECS.Core.Entity
  parent: ECS.Core
  href: ECS.Core.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: ECS.Core.Entity
- uid: ECS.Components.Physics.Position
  commentId: T:ECS.Components.Physics.Position
  parent: ECS.Components.Physics
  href: ECS.Components.Physics.Position.html
  name: Position
  nameWithType: Position
  fullName: ECS.Components.Physics.Position
- uid: ECS.Components.Physics
  commentId: N:ECS.Components.Physics
  href: ECS.html
  name: ECS.Components.Physics
  nameWithType: ECS.Components.Physics
  fullName: ECS.Components.Physics
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Components
    name: Components
    href: ECS.Components.html
  - name: .
  - uid: ECS.Components.Physics
    name: Physics
    href: ECS.Components.Physics.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Components
    name: Components
    href: ECS.Components.html
  - name: .
  - uid: ECS.Components.Physics
    name: Physics
    href: ECS.Components.Physics.html
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.CalculateCollisionBounds*
  commentId: Overload:ECS.Systems.AI.PhysicsAwarePathfinding.CalculateCollisionBounds
  href: ECS.Systems.AI.PhysicsAwarePathfinding.html#ECS_Systems_AI_PhysicsAwarePathfinding_CalculateCollisionBounds_ECS_Core_Entity_ECS_Components_Collision_CollisionBody_ECS_Components_Physics_Position_
  name: CalculateCollisionBounds
  nameWithType: PhysicsAwarePathfinding.CalculateCollisionBounds
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.CalculateCollisionBounds
- uid: ECS.Components.Collision.CollisionBody
  commentId: T:ECS.Components.Collision.CollisionBody
  parent: ECS.Components.Collision
  href: ECS.Components.Collision.CollisionBody.html
  name: CollisionBody
  nameWithType: CollisionBody
  fullName: ECS.Components.Collision.CollisionBody
- uid: ECS.Components.Collision
  commentId: N:ECS.Components.Collision
  href: ECS.html
  name: ECS.Components.Collision
  nameWithType: ECS.Components.Collision
  fullName: ECS.Components.Collision
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Components
    name: Components
    href: ECS.Components.html
  - name: .
  - uid: ECS.Components.Collision
    name: Collision
    href: ECS.Components.Collision.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Components
    name: Components
    href: ECS.Components.html
  - name: .
  - uid: ECS.Components.Collision
    name: Collision
    href: ECS.Components.Collision.html
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.WorldToGrid*
  commentId: Overload:ECS.Systems.AI.PhysicsAwarePathfinding.WorldToGrid
  href: ECS.Systems.AI.PhysicsAwarePathfinding.html#ECS_Systems_AI_PhysicsAwarePathfinding_WorldToGrid_Microsoft_Xna_Framework_Vector2_
  name: WorldToGrid
  nameWithType: PhysicsAwarePathfinding.WorldToGrid
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.WorldToGrid
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: System.ValueTuple{System.Int32,System.Int32}
  commentId: T:System.ValueTuple{System.Int32,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int, int)
  nameWithType: (int, int)
  fullName: (int, int)
  nameWithType.vb: (Integer, Integer)
  fullName.vb: (Integer, Integer)
  name.vb: (Integer, Integer)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.GridToWorld*
  commentId: Overload:ECS.Systems.AI.PhysicsAwarePathfinding.GridToWorld
  href: ECS.Systems.AI.PhysicsAwarePathfinding.html#ECS_Systems_AI_PhysicsAwarePathfinding_GridToWorld_System_Int32_System_Int32_
  name: GridToWorld
  nameWithType: PhysicsAwarePathfinding.GridToWorld
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.GridToWorld
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.PlanRecovery*
  commentId: Overload:ECS.Systems.AI.PhysicsAwarePathfinding.PlanRecovery
  href: ECS.Systems.AI.PhysicsAwarePathfinding.html#ECS_Systems_AI_PhysicsAwarePathfinding_PlanRecovery_ECS_Core_Entity_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_
  name: PlanRecovery
  nameWithType: PhysicsAwarePathfinding.PlanRecovery
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.PlanRecovery
- uid: ECS.Systems.AI.RecoveryPlan
  commentId: T:ECS.Systems.AI.RecoveryPlan
  parent: ECS.Systems.AI
  href: ECS.Systems.AI.RecoveryPlan.html
  name: RecoveryPlan
  nameWithType: RecoveryPlan
  fullName: ECS.Systems.AI.RecoveryPlan
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.FindSafePosition*
  commentId: Overload:ECS.Systems.AI.PhysicsAwarePathfinding.FindSafePosition
  href: ECS.Systems.AI.PhysicsAwarePathfinding.html#ECS_Systems_AI_PhysicsAwarePathfinding_FindSafePosition_Microsoft_Xna_Framework_Vector2_
  name: FindSafePosition
  nameWithType: PhysicsAwarePathfinding.FindSafePosition
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.FindSafePosition
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.EstimateMaxHeight*
  commentId: Overload:ECS.Systems.AI.PhysicsAwarePathfinding.EstimateMaxHeight
  href: ECS.Systems.AI.PhysicsAwarePathfinding.html#ECS_Systems_AI_PhysicsAwarePathfinding_EstimateMaxHeight_System_Single_System_Single_
  name: EstimateMaxHeight
  nameWithType: PhysicsAwarePathfinding.EstimateMaxHeight
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.EstimateMaxHeight
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.IsLikelyToLandOnPlatform*
  commentId: Overload:ECS.Systems.AI.PhysicsAwarePathfinding.IsLikelyToLandOnPlatform
  href: ECS.Systems.AI.PhysicsAwarePathfinding.html#ECS_Systems_AI_PhysicsAwarePathfinding_IsLikelyToLandOnPlatform_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_ECS_Core_Entity__
  name: IsLikelyToLandOnPlatform
  nameWithType: PhysicsAwarePathfinding.IsLikelyToLandOnPlatform
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.IsLikelyToLandOnPlatform
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.SimulatePath*
  commentId: Overload:ECS.Systems.AI.PhysicsAwarePathfinding.SimulatePath
  href: ECS.Systems.AI.PhysicsAwarePathfinding.html#ECS_Systems_AI_PhysicsAwarePathfinding_SimulatePath_ECS_Core_Entity_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_ECS_Systems_AI_RecoveryPlan_
  name: SimulatePath
  nameWithType: PhysicsAwarePathfinding.SimulatePath
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.SimulatePath
- uid: System.ValueTuple{System.Boolean,System.Collections.Generic.List{Microsoft.Xna.Framework.Vector2}}
  commentId: T:System.ValueTuple{System.Boolean,System.Collections.Generic.List{Microsoft.Xna.Framework.Vector2}}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: (bool success, List<Vector2> path)
  nameWithType: (bool success, List<Vector2> path)
  fullName: (bool success, System.Collections.Generic.List<Microsoft.Xna.Framework.Vector2> path)
  nameWithType.vb: (success As Boolean, path As List(Of Vector2))
  fullName.vb: (success As Boolean, path As System.Collections.Generic.List(Of Microsoft.Xna.Framework.Vector2))
  name.vb: (success As Boolean, path As List(Of Vector2))
  spec.csharp:
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{System.Boolean,System.Collections.Generic.List{Microsoft.Xna.Framework.Vector2}}.success
    name: success
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,system.collections.generic.list-microsoft.xna.framework.vector2--.success
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Boolean,System.Collections.Generic.List{Microsoft.Xna.Framework.Vector2}}.path
    name: path
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,system.collections.generic.list-microsoft.xna.framework.vector2--.path
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Boolean,System.Collections.Generic.List{Microsoft.Xna.Framework.Vector2}}.success
    name: success
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,system.collections.generic.list-microsoft.xna.framework.vector2--.success
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Boolean,System.Collections.Generic.List{Microsoft.Xna.Framework.Vector2}}.path
    name: path
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,system.collections.generic.list-microsoft.xna.framework.vector2--.path
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
  - name: )
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.IsPositionSafe*
  commentId: Overload:ECS.Systems.AI.PhysicsAwarePathfinding.IsPositionSafe
  href: ECS.Systems.AI.PhysicsAwarePathfinding.html#ECS_Systems_AI_PhysicsAwarePathfinding_IsPositionSafe_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_
  name: IsPositionSafe
  nameWithType: PhysicsAwarePathfinding.IsPositionSafe
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.IsPositionSafe
- uid: ECS.Systems.AI.PhysicsAwarePathfinding.GetActionsFromPlan*
  commentId: Overload:ECS.Systems.AI.PhysicsAwarePathfinding.GetActionsFromPlan
  href: ECS.Systems.AI.PhysicsAwarePathfinding.html#ECS_Systems_AI_PhysicsAwarePathfinding_GetActionsFromPlan_ECS_Systems_AI_RecoveryPlan_
  name: GetActionsFromPlan
  nameWithType: PhysicsAwarePathfinding.GetActionsFromPlan
  fullName: ECS.Systems.AI.PhysicsAwarePathfinding.GetActionsFromPlan
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
