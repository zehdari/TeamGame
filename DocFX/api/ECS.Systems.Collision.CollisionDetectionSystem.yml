### YamlMime:ManagedReference
items:
- uid: ECS.Systems.Collision.CollisionDetectionSystem
  commentId: T:ECS.Systems.Collision.CollisionDetectionSystem
  id: CollisionDetectionSystem
  parent: ECS.Systems.Collision
  children:
  - ECS.Systems.Collision.CollisionDetectionSystem.ActiveContacts
  - ECS.Systems.Collision.CollisionDetectionSystem.BroadPhase(System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,System.Nullable{ECS.Components.Physics.Velocity}}})
  - ECS.Systems.Collision.CollisionDetectionSystem.BroadphaseCache
  - ECS.Systems.Collision.CollisionDetectionSystem.CacheTransformedVertices(System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,System.Nullable{ECS.Components.Physics.Velocity}}})
  - ECS.Systems.Collision.CollisionDetectionSystem.CalculateAABB(ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position)
  - ECS.Systems.Collision.CollisionDetectionSystem.CalculateContactPoint(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2)
  - ECS.Systems.Collision.CollisionDetectionSystem.CheckPolygonCollision(ECS.Core.Entity,ECS.Core.Entity,Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2[],ECS.Components.Collision.Polygon,ECS.Components.Collision.Polygon)
  - ECS.Systems.Collision.CollisionDetectionSystem.GetCollidableBodies
  - ECS.Systems.Collision.CollisionDetectionSystem.GetExpandedAABB(ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position)
  - ECS.Systems.Collision.CollisionDetectionSystem.GetSATAxes(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2[])
  - ECS.Systems.Collision.CollisionDetectionSystem.Initialize(ECS.Core.World)
  - ECS.Systems.Collision.CollisionDetectionSystem.NarrowPhase(System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Core.Entity}})
  - ECS.Systems.Collision.CollisionDetectionSystem.ProcessContacts(System.Collections.Generic.List{ECS.Components.Collision.Contact})
  - ECS.Systems.Collision.CollisionDetectionSystem.ProcessEntityPairContacts(ECS.Core.Entity,ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,ECS.Components.Physics.Position)
  - ECS.Systems.Collision.CollisionDetectionSystem.ShouldSkipPlatformCollision(ECS.Core.Entity,ECS.Core.Entity)
  - ECS.Systems.Collision.CollisionDetectionSystem.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
  - ECS.Systems.Collision.CollisionDetectionSystem.transformedVerticesCache
  langs:
  - csharp
  - vb
  name: CollisionDetectionSystem
  nameWithType: CollisionDetectionSystem
  fullName: ECS.Systems.Collision.CollisionDetectionSystem
  type: Class
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: CollisionDetectionSystem
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 7
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: 'public class CollisionDetectionSystem : SystemBase, ISystem'
    content.vb: Public Class CollisionDetectionSystem Inherits SystemBase Implements ISystem
  inheritance:
  - System.Object
  - ECS.Core.SystemBase
  implements:
  - ECS.Core.ISystem
  inheritedMembers:
  - ECS.Core.SystemBase.World
  - ECS.Core.SystemBase.HasComponents``1(ECS.Core.Entity)
  - ECS.Core.SystemBase.GetEntitiesWith``1(ECS.Core.Entity)
  - ECS.Core.SystemBase.GetComponent``1(ECS.Core.Entity)
  - ECS.Core.SystemBase.Subscribe``1(System.Action{ECS.Events.IEvent})
  - ECS.Core.SystemBase.Publish``1({T})
  - ECS.Core.SystemBase.Pausible
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ECS.Systems.Collision.CollisionDetectionSystem.ActiveContacts
  commentId: F:ECS.Systems.Collision.CollisionDetectionSystem.ActiveContacts
  id: ActiveContacts
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: ActiveContacts
  nameWithType: CollisionDetectionSystem.ActiveContacts
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.ActiveContacts
  type: Field
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: ActiveContacts
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 9
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private HashSet<(Entity, Entity)> ActiveContacts
    return:
      type: System.Collections.Generic.HashSet{System.ValueTuple{ECS.Core.Entity,ECS.Core.Entity}}
    content.vb: Private ActiveContacts As HashSet(Of (Entity, Entity))
- uid: ECS.Systems.Collision.CollisionDetectionSystem.BroadphaseCache
  commentId: F:ECS.Systems.Collision.CollisionDetectionSystem.BroadphaseCache
  id: BroadphaseCache
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: BroadphaseCache
  nameWithType: CollisionDetectionSystem.BroadphaseCache
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.BroadphaseCache
  type: Field
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: BroadphaseCache
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 10
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private Dictionary<Entity, Rectangle> BroadphaseCache
    return:
      type: System.Collections.Generic.Dictionary{ECS.Core.Entity,Microsoft.Xna.Framework.Rectangle}
    content.vb: Private BroadphaseCache As Dictionary(Of Entity, Rectangle)
- uid: ECS.Systems.Collision.CollisionDetectionSystem.transformedVerticesCache
  commentId: F:ECS.Systems.Collision.CollisionDetectionSystem.transformedVerticesCache
  id: transformedVerticesCache
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: transformedVerticesCache
  nameWithType: CollisionDetectionSystem.transformedVerticesCache
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.transformedVerticesCache
  type: Field
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: transformedVerticesCache
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 11
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private Dictionary<(Entity, Polygon), Vector2[]> transformedVerticesCache
    return:
      type: System.Collections.Generic.Dictionary{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.Polygon},Microsoft.Xna.Framework.Vector2[]}
    content.vb: Private transformedVerticesCache As Dictionary(Of (Entity, Polygon), Vector2())
- uid: ECS.Systems.Collision.CollisionDetectionSystem.Initialize(ECS.Core.World)
  commentId: M:ECS.Systems.Collision.CollisionDetectionSystem.Initialize(ECS.Core.World)
  id: Initialize(ECS.Core.World)
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: Initialize(World)
  nameWithType: CollisionDetectionSystem.Initialize(World)
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.Initialize(ECS.Core.World)
  type: Method
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: Initialize
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 13
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  example: []
  syntax:
    content: public override void Initialize(World world)
    parameters:
    - id: world
      type: ECS.Core.World
    content.vb: Public Overrides Sub Initialize(world As World)
  overridden: ECS.Core.SystemBase.Initialize(ECS.Core.World)
  overload: ECS.Systems.Collision.CollisionDetectionSystem.Initialize*
- uid: ECS.Systems.Collision.CollisionDetectionSystem.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
  commentId: M:ECS.Systems.Collision.CollisionDetectionSystem.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
  id: Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: Update(World, GameTime)
  nameWithType: CollisionDetectionSystem.Update(World, GameTime)
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.Update(ECS.Core.World, Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: Update
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 18
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  example: []
  syntax:
    content: public override void Update(World world, GameTime gameTime)
    parameters:
    - id: world
      type: ECS.Core.World
    - id: gameTime
      type: Microsoft.Xna.Framework.GameTime
    content.vb: Public Overrides Sub Update(world As World, gameTime As GameTime)
  overridden: ECS.Core.SystemBase.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
  overload: ECS.Systems.Collision.CollisionDetectionSystem.Update*
- uid: ECS.Systems.Collision.CollisionDetectionSystem.GetCollidableBodies
  commentId: M:ECS.Systems.Collision.CollisionDetectionSystem.GetCollidableBodies
  id: GetCollidableBodies
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: GetCollidableBodies()
  nameWithType: CollisionDetectionSystem.GetCollidableBodies()
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.GetCollidableBodies()
  type: Method
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: GetCollidableBodies
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 37
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private List<(Entity, CollisionBody, Position, Velocity?)> GetCollidableBodies()
    return:
      type: System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,System.Nullable{ECS.Components.Physics.Velocity}}}
    content.vb: Private Function GetCollidableBodies() As List(Of (Entity, CollisionBody, Position, Velocity?))
  overload: ECS.Systems.Collision.CollisionDetectionSystem.GetCollidableBodies*
- uid: ECS.Systems.Collision.CollisionDetectionSystem.CacheTransformedVertices(System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,System.Nullable{ECS.Components.Physics.Velocity}}})
  commentId: M:ECS.Systems.Collision.CollisionDetectionSystem.CacheTransformedVertices(System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,System.Nullable{ECS.Components.Physics.Velocity}}})
  id: CacheTransformedVertices(System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,System.Nullable{ECS.Components.Physics.Velocity}}})
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: CacheTransformedVertices(List<(Entity, CollisionBody, Position, Velocity?)>)
  nameWithType: CollisionDetectionSystem.CacheTransformedVertices(List<(Entity, CollisionBody, Position, Velocity?)>)
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.CacheTransformedVertices(System.Collections.Generic.List<(ECS.Core.Entity, ECS.Components.Collision.CollisionBody, ECS.Components.Physics.Position, ECS.Components.Physics.Velocity?)>)
  type: Method
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: CacheTransformedVertices
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 60
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private void CacheTransformedVertices(List<(Entity, CollisionBody, Position, Velocity?)> bodies)
    parameters:
    - id: bodies
      type: System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,System.Nullable{ECS.Components.Physics.Velocity}}}
    content.vb: Private Sub CacheTransformedVertices(bodies As List(Of (Entity, CollisionBody, Position, Velocity?)))
  overload: ECS.Systems.Collision.CollisionDetectionSystem.CacheTransformedVertices*
  nameWithType.vb: CollisionDetectionSystem.CacheTransformedVertices(List(Of (Entity, CollisionBody, Position, Velocity?)))
  fullName.vb: ECS.Systems.Collision.CollisionDetectionSystem.CacheTransformedVertices(System.Collections.Generic.List(Of (ECS.Core.Entity, ECS.Components.Collision.CollisionBody, ECS.Components.Physics.Position, ECS.Components.Physics.Velocity?)))
  name.vb: CacheTransformedVertices(List(Of (Entity, CollisionBody, Position, Velocity?)))
- uid: ECS.Systems.Collision.CollisionDetectionSystem.BroadPhase(System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,System.Nullable{ECS.Components.Physics.Velocity}}})
  commentId: M:ECS.Systems.Collision.CollisionDetectionSystem.BroadPhase(System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,System.Nullable{ECS.Components.Physics.Velocity}}})
  id: BroadPhase(System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,System.Nullable{ECS.Components.Physics.Velocity}}})
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: BroadPhase(List<(Entity, CollisionBody, Position, Velocity?)>)
  nameWithType: CollisionDetectionSystem.BroadPhase(List<(Entity, CollisionBody, Position, Velocity?)>)
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.BroadPhase(System.Collections.Generic.List<(ECS.Core.Entity, ECS.Components.Collision.CollisionBody, ECS.Components.Physics.Position, ECS.Components.Physics.Velocity?)>)
  type: Method
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: BroadPhase
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 74
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private List<(Entity, Entity)> BroadPhase(List<(Entity, CollisionBody, Position, Velocity?)> bodies)
    parameters:
    - id: bodies
      type: System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,System.Nullable{ECS.Components.Physics.Velocity}}}
    return:
      type: System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Core.Entity}}
    content.vb: Private Function BroadPhase(bodies As List(Of (Entity, CollisionBody, Position, Velocity?))) As List(Of (Entity, Entity))
  overload: ECS.Systems.Collision.CollisionDetectionSystem.BroadPhase*
  nameWithType.vb: CollisionDetectionSystem.BroadPhase(List(Of (Entity, CollisionBody, Position, Velocity?)))
  fullName.vb: ECS.Systems.Collision.CollisionDetectionSystem.BroadPhase(System.Collections.Generic.List(Of (ECS.Core.Entity, ECS.Components.Collision.CollisionBody, ECS.Components.Physics.Position, ECS.Components.Physics.Velocity?)))
  name.vb: BroadPhase(List(Of (Entity, CollisionBody, Position, Velocity?)))
- uid: ECS.Systems.Collision.CollisionDetectionSystem.GetExpandedAABB(ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position)
  commentId: M:ECS.Systems.Collision.CollisionDetectionSystem.GetExpandedAABB(ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position)
  id: GetExpandedAABB(ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position)
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: GetExpandedAABB(Entity, CollisionBody, Position)
  nameWithType: CollisionDetectionSystem.GetExpandedAABB(Entity, CollisionBody, Position)
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.GetExpandedAABB(ECS.Core.Entity, ECS.Components.Collision.CollisionBody, ECS.Components.Physics.Position)
  type: Method
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: GetExpandedAABB
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 113
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private Rectangle GetExpandedAABB(Entity entity, CollisionBody body, Position pos)
    parameters:
    - id: entity
      type: ECS.Core.Entity
    - id: body
      type: ECS.Components.Collision.CollisionBody
    - id: pos
      type: ECS.Components.Physics.Position
    return:
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: Private Function GetExpandedAABB(entity As Entity, body As CollisionBody, pos As Position) As Rectangle
  overload: ECS.Systems.Collision.CollisionDetectionSystem.GetExpandedAABB*
- uid: ECS.Systems.Collision.CollisionDetectionSystem.CalculateAABB(ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position)
  commentId: M:ECS.Systems.Collision.CollisionDetectionSystem.CalculateAABB(ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position)
  id: CalculateAABB(ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position)
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: CalculateAABB(Entity, CollisionBody, Position)
  nameWithType: CollisionDetectionSystem.CalculateAABB(Entity, CollisionBody, Position)
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.CalculateAABB(ECS.Core.Entity, ECS.Components.Collision.CollisionBody, ECS.Components.Physics.Position)
  type: Method
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: CalculateAABB
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 136
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private Rectangle CalculateAABB(Entity entity, CollisionBody body, Position pos)
    parameters:
    - id: entity
      type: ECS.Core.Entity
    - id: body
      type: ECS.Components.Collision.CollisionBody
    - id: pos
      type: ECS.Components.Physics.Position
    return:
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: Private Function CalculateAABB(entity As Entity, body As CollisionBody, pos As Position) As Rectangle
  overload: ECS.Systems.Collision.CollisionDetectionSystem.CalculateAABB*
- uid: ECS.Systems.Collision.CollisionDetectionSystem.NarrowPhase(System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Core.Entity}})
  commentId: M:ECS.Systems.Collision.CollisionDetectionSystem.NarrowPhase(System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Core.Entity}})
  id: NarrowPhase(System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Core.Entity}})
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: NarrowPhase(List<(Entity, Entity)>)
  nameWithType: CollisionDetectionSystem.NarrowPhase(List<(Entity, Entity)>)
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.NarrowPhase(System.Collections.Generic.List<(ECS.Core.Entity, ECS.Core.Entity)>)
  type: Method
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: NarrowPhase
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 163
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private List<Contact> NarrowPhase(List<(Entity, Entity)> pairs)
    parameters:
    - id: pairs
      type: System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Core.Entity}}
    return:
      type: System.Collections.Generic.List{ECS.Components.Collision.Contact}
    content.vb: Private Function NarrowPhase(pairs As List(Of (Entity, Entity))) As List(Of Contact)
  overload: ECS.Systems.Collision.CollisionDetectionSystem.NarrowPhase*
  nameWithType.vb: CollisionDetectionSystem.NarrowPhase(List(Of (Entity, Entity)))
  fullName.vb: ECS.Systems.Collision.CollisionDetectionSystem.NarrowPhase(System.Collections.Generic.List(Of (ECS.Core.Entity, ECS.Core.Entity)))
  name.vb: NarrowPhase(List(Of (Entity, Entity)))
- uid: ECS.Systems.Collision.CollisionDetectionSystem.ShouldSkipPlatformCollision(ECS.Core.Entity,ECS.Core.Entity)
  commentId: M:ECS.Systems.Collision.CollisionDetectionSystem.ShouldSkipPlatformCollision(ECS.Core.Entity,ECS.Core.Entity)
  id: ShouldSkipPlatformCollision(ECS.Core.Entity,ECS.Core.Entity)
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: ShouldSkipPlatformCollision(Entity, Entity)
  nameWithType: CollisionDetectionSystem.ShouldSkipPlatformCollision(Entity, Entity)
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.ShouldSkipPlatformCollision(ECS.Core.Entity, ECS.Core.Entity)
  type: Method
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: ShouldSkipPlatformCollision
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 187
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private bool ShouldSkipPlatformCollision(Entity entityA, Entity entityB)
    parameters:
    - id: entityA
      type: ECS.Core.Entity
    - id: entityB
      type: ECS.Core.Entity
    return:
      type: System.Boolean
    content.vb: Private Function ShouldSkipPlatformCollision(entityA As Entity, entityB As Entity) As Boolean
  overload: ECS.Systems.Collision.CollisionDetectionSystem.ShouldSkipPlatformCollision*
- uid: ECS.Systems.Collision.CollisionDetectionSystem.ProcessEntityPairContacts(ECS.Core.Entity,ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,ECS.Components.Physics.Position)
  commentId: M:ECS.Systems.Collision.CollisionDetectionSystem.ProcessEntityPairContacts(ECS.Core.Entity,ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,ECS.Components.Physics.Position)
  id: ProcessEntityPairContacts(ECS.Core.Entity,ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,ECS.Components.Physics.Position)
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: ProcessEntityPairContacts(Entity, Entity, CollisionBody, CollisionBody, Position, Position)
  nameWithType: CollisionDetectionSystem.ProcessEntityPairContacts(Entity, Entity, CollisionBody, CollisionBody, Position, Position)
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.ProcessEntityPairContacts(ECS.Core.Entity, ECS.Core.Entity, ECS.Components.Collision.CollisionBody, ECS.Components.Collision.CollisionBody, ECS.Components.Physics.Position, ECS.Components.Physics.Position)
  type: Method
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: ProcessEntityPairContacts
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 352
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private List<Contact> ProcessEntityPairContacts(Entity entityA, Entity entityB, CollisionBody bodyA, CollisionBody bodyB, Position posA, Position posB)
    parameters:
    - id: entityA
      type: ECS.Core.Entity
    - id: entityB
      type: ECS.Core.Entity
    - id: bodyA
      type: ECS.Components.Collision.CollisionBody
    - id: bodyB
      type: ECS.Components.Collision.CollisionBody
    - id: posA
      type: ECS.Components.Physics.Position
    - id: posB
      type: ECS.Components.Physics.Position
    return:
      type: System.Collections.Generic.List{ECS.Components.Collision.Contact}
    content.vb: Private Function ProcessEntityPairContacts(entityA As Entity, entityB As Entity, bodyA As CollisionBody, bodyB As CollisionBody, posA As Position, posB As Position) As List(Of Contact)
  overload: ECS.Systems.Collision.CollisionDetectionSystem.ProcessEntityPairContacts*
- uid: ECS.Systems.Collision.CollisionDetectionSystem.CheckPolygonCollision(ECS.Core.Entity,ECS.Core.Entity,Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2[],ECS.Components.Collision.Polygon,ECS.Components.Collision.Polygon)
  commentId: M:ECS.Systems.Collision.CollisionDetectionSystem.CheckPolygonCollision(ECS.Core.Entity,ECS.Core.Entity,Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2[],ECS.Components.Collision.Polygon,ECS.Components.Collision.Polygon)
  id: CheckPolygonCollision(ECS.Core.Entity,ECS.Core.Entity,Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2[],ECS.Components.Collision.Polygon,ECS.Components.Collision.Polygon)
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: CheckPolygonCollision(Entity, Entity, Vector2[], Vector2[], Polygon, Polygon)
  nameWithType: CollisionDetectionSystem.CheckPolygonCollision(Entity, Entity, Vector2[], Vector2[], Polygon, Polygon)
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.CheckPolygonCollision(ECS.Core.Entity, ECS.Core.Entity, Microsoft.Xna.Framework.Vector2[], Microsoft.Xna.Framework.Vector2[], ECS.Components.Collision.Polygon, ECS.Components.Collision.Polygon)
  type: Method
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: CheckPolygonCollision
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 399
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private Contact? CheckPolygonCollision(Entity entityA, Entity entityB, Vector2[] verticesA, Vector2[] verticesB, Polygon polygonA, Polygon polygonB)
    parameters:
    - id: entityA
      type: ECS.Core.Entity
    - id: entityB
      type: ECS.Core.Entity
    - id: verticesA
      type: Microsoft.Xna.Framework.Vector2[]
    - id: verticesB
      type: Microsoft.Xna.Framework.Vector2[]
    - id: polygonA
      type: ECS.Components.Collision.Polygon
    - id: polygonB
      type: ECS.Components.Collision.Polygon
    return:
      type: System.Nullable{ECS.Components.Collision.Contact}
    content.vb: Private Function CheckPolygonCollision(entityA As Entity, entityB As Entity, verticesA As Vector2(), verticesB As Vector2(), polygonA As Polygon, polygonB As Polygon) As Contact?
  overload: ECS.Systems.Collision.CollisionDetectionSystem.CheckPolygonCollision*
  nameWithType.vb: CollisionDetectionSystem.CheckPolygonCollision(Entity, Entity, Vector2(), Vector2(), Polygon, Polygon)
  fullName.vb: ECS.Systems.Collision.CollisionDetectionSystem.CheckPolygonCollision(ECS.Core.Entity, ECS.Core.Entity, Microsoft.Xna.Framework.Vector2(), Microsoft.Xna.Framework.Vector2(), ECS.Components.Collision.Polygon, ECS.Components.Collision.Polygon)
  name.vb: CheckPolygonCollision(Entity, Entity, Vector2(), Vector2(), Polygon, Polygon)
- uid: ECS.Systems.Collision.CollisionDetectionSystem.GetSATAxes(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2[])
  commentId: M:ECS.Systems.Collision.CollisionDetectionSystem.GetSATAxes(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2[])
  id: GetSATAxes(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2[])
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: GetSATAxes(Vector2[], Vector2[])
  nameWithType: CollisionDetectionSystem.GetSATAxes(Vector2[], Vector2[])
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.GetSATAxes(Microsoft.Xna.Framework.Vector2[], Microsoft.Xna.Framework.Vector2[])
  type: Method
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: GetSATAxes
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 450
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private List<Vector2> GetSATAxes(Vector2[] verticesA, Vector2[] verticesB)
    parameters:
    - id: verticesA
      type: Microsoft.Xna.Framework.Vector2[]
    - id: verticesB
      type: Microsoft.Xna.Framework.Vector2[]
    return:
      type: System.Collections.Generic.List{Microsoft.Xna.Framework.Vector2}
    content.vb: Private Function GetSATAxes(verticesA As Vector2(), verticesB As Vector2()) As List(Of Vector2)
  overload: ECS.Systems.Collision.CollisionDetectionSystem.GetSATAxes*
  nameWithType.vb: CollisionDetectionSystem.GetSATAxes(Vector2(), Vector2())
  fullName.vb: ECS.Systems.Collision.CollisionDetectionSystem.GetSATAxes(Microsoft.Xna.Framework.Vector2(), Microsoft.Xna.Framework.Vector2())
  name.vb: GetSATAxes(Vector2(), Vector2())
- uid: ECS.Systems.Collision.CollisionDetectionSystem.CalculateContactPoint(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2)
  commentId: M:ECS.Systems.Collision.CollisionDetectionSystem.CalculateContactPoint(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2)
  id: CalculateContactPoint(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2)
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: CalculateContactPoint(Vector2[], Vector2[], Vector2)
  nameWithType: CollisionDetectionSystem.CalculateContactPoint(Vector2[], Vector2[], Vector2)
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.CalculateContactPoint(Microsoft.Xna.Framework.Vector2[], Microsoft.Xna.Framework.Vector2[], Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: CalculateContactPoint
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 472
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private Vector2 CalculateContactPoint(Vector2[] verticesA, Vector2[] verticesB, Vector2 normal)
    parameters:
    - id: verticesA
      type: Microsoft.Xna.Framework.Vector2[]
    - id: verticesB
      type: Microsoft.Xna.Framework.Vector2[]
    - id: normal
      type: Microsoft.Xna.Framework.Vector2
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Private Function CalculateContactPoint(verticesA As Vector2(), verticesB As Vector2(), normal As Vector2) As Vector2
  overload: ECS.Systems.Collision.CollisionDetectionSystem.CalculateContactPoint*
  nameWithType.vb: CollisionDetectionSystem.CalculateContactPoint(Vector2(), Vector2(), Vector2)
  fullName.vb: ECS.Systems.Collision.CollisionDetectionSystem.CalculateContactPoint(Microsoft.Xna.Framework.Vector2(), Microsoft.Xna.Framework.Vector2(), Microsoft.Xna.Framework.Vector2)
  name.vb: CalculateContactPoint(Vector2(), Vector2(), Vector2)
- uid: ECS.Systems.Collision.CollisionDetectionSystem.ProcessContacts(System.Collections.Generic.List{ECS.Components.Collision.Contact})
  commentId: M:ECS.Systems.Collision.CollisionDetectionSystem.ProcessContacts(System.Collections.Generic.List{ECS.Components.Collision.Contact})
  id: ProcessContacts(System.Collections.Generic.List{ECS.Components.Collision.Contact})
  parent: ECS.Systems.Collision.CollisionDetectionSystem
  langs:
  - csharp
  - vb
  name: ProcessContacts(List<Contact>)
  nameWithType: CollisionDetectionSystem.ProcessContacts(List<Contact>)
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.ProcessContacts(System.Collections.Generic.List<ECS.Components.Collision.Contact>)
  type: Method
  source:
    remote:
      path: Systems/Collision/CollisionDetectionSystem.cs
      branch: Sprint4
      repo: https://github.com/zehdari/TeamGame
    id: ProcessContacts
    path: ../Systems/Collision/CollisionDetectionSystem.cs
    startLine: 490
  assemblies:
  - ECS
  namespace: ECS.Systems.Collision
  syntax:
    content: private void ProcessContacts(List<Contact> contacts)
    parameters:
    - id: contacts
      type: System.Collections.Generic.List{ECS.Components.Collision.Contact}
    content.vb: Private Sub ProcessContacts(contacts As List(Of Contact))
  overload: ECS.Systems.Collision.CollisionDetectionSystem.ProcessContacts*
  nameWithType.vb: CollisionDetectionSystem.ProcessContacts(List(Of Contact))
  fullName.vb: ECS.Systems.Collision.CollisionDetectionSystem.ProcessContacts(System.Collections.Generic.List(Of ECS.Components.Collision.Contact))
  name.vb: ProcessContacts(List(Of Contact))
references:
- uid: ECS.Systems.Collision
  commentId: N:ECS.Systems.Collision
  href: ECS.html
  name: ECS.Systems.Collision
  nameWithType: ECS.Systems.Collision
  fullName: ECS.Systems.Collision
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Systems
    name: Systems
    href: ECS.Systems.html
  - name: .
  - uid: ECS.Systems.Collision
    name: Collision
    href: ECS.Systems.Collision.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Systems
    name: Systems
    href: ECS.Systems.html
  - name: .
  - uid: ECS.Systems.Collision
    name: Collision
    href: ECS.Systems.Collision.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ECS.Core.SystemBase
  commentId: T:ECS.Core.SystemBase
  parent: ECS.Core
  href: ECS.Core.SystemBase.html
  name: SystemBase
  nameWithType: SystemBase
  fullName: ECS.Core.SystemBase
- uid: ECS.Core.ISystem
  commentId: T:ECS.Core.ISystem
  parent: ECS.Core
  href: ECS.Core.ISystem.html
  name: ISystem
  nameWithType: ISystem
  fullName: ECS.Core.ISystem
- uid: ECS.Core.SystemBase.World
  commentId: P:ECS.Core.SystemBase.World
  parent: ECS.Core.SystemBase
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_World
  name: World
  nameWithType: SystemBase.World
  fullName: ECS.Core.SystemBase.World
- uid: ECS.Core.SystemBase.HasComponents``1(ECS.Core.Entity)
  commentId: M:ECS.Core.SystemBase.HasComponents``1(ECS.Core.Entity)
  parent: ECS.Core.SystemBase
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_HasComponents__1_ECS_Core_Entity_
  name: HasComponents<T>(Entity)
  nameWithType: SystemBase.HasComponents<T>(Entity)
  fullName: ECS.Core.SystemBase.HasComponents<T>(ECS.Core.Entity)
  nameWithType.vb: SystemBase.HasComponents(Of T)(Entity)
  fullName.vb: ECS.Core.SystemBase.HasComponents(Of T)(ECS.Core.Entity)
  name.vb: HasComponents(Of T)(Entity)
  spec.csharp:
  - uid: ECS.Core.SystemBase.HasComponents``1(ECS.Core.Entity)
    name: HasComponents
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_HasComponents__1_ECS_Core_Entity_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.HasComponents``1(ECS.Core.Entity)
    name: HasComponents
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_HasComponents__1_ECS_Core_Entity_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
- uid: ECS.Core.SystemBase.GetEntitiesWith``1(ECS.Core.Entity)
  commentId: M:ECS.Core.SystemBase.GetEntitiesWith``1(ECS.Core.Entity)
  parent: ECS.Core.SystemBase
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_GetEntitiesWith__1_ECS_Core_Entity_
  name: GetEntitiesWith<T>(Entity)
  nameWithType: SystemBase.GetEntitiesWith<T>(Entity)
  fullName: ECS.Core.SystemBase.GetEntitiesWith<T>(ECS.Core.Entity)
  nameWithType.vb: SystemBase.GetEntitiesWith(Of T)(Entity)
  fullName.vb: ECS.Core.SystemBase.GetEntitiesWith(Of T)(ECS.Core.Entity)
  name.vb: GetEntitiesWith(Of T)(Entity)
  spec.csharp:
  - uid: ECS.Core.SystemBase.GetEntitiesWith``1(ECS.Core.Entity)
    name: GetEntitiesWith
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_GetEntitiesWith__1_ECS_Core_Entity_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.GetEntitiesWith``1(ECS.Core.Entity)
    name: GetEntitiesWith
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_GetEntitiesWith__1_ECS_Core_Entity_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
- uid: ECS.Core.SystemBase.GetComponent``1(ECS.Core.Entity)
  commentId: M:ECS.Core.SystemBase.GetComponent``1(ECS.Core.Entity)
  parent: ECS.Core.SystemBase
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_GetComponent__1_ECS_Core_Entity_
  name: GetComponent<T>(Entity)
  nameWithType: SystemBase.GetComponent<T>(Entity)
  fullName: ECS.Core.SystemBase.GetComponent<T>(ECS.Core.Entity)
  nameWithType.vb: SystemBase.GetComponent(Of T)(Entity)
  fullName.vb: ECS.Core.SystemBase.GetComponent(Of T)(ECS.Core.Entity)
  name.vb: GetComponent(Of T)(Entity)
  spec.csharp:
  - uid: ECS.Core.SystemBase.GetComponent``1(ECS.Core.Entity)
    name: GetComponent
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_GetComponent__1_ECS_Core_Entity_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.GetComponent``1(ECS.Core.Entity)
    name: GetComponent
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_GetComponent__1_ECS_Core_Entity_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
- uid: ECS.Core.SystemBase.Subscribe``1(System.Action{ECS.Events.IEvent})
  commentId: M:ECS.Core.SystemBase.Subscribe``1(System.Action{ECS.Events.IEvent})
  parent: ECS.Core.SystemBase
  isExternal: true
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Subscribe__1_System_Action_ECS_Events_IEvent__
  name: Subscribe<T>(Action<IEvent>)
  nameWithType: SystemBase.Subscribe<T>(Action<IEvent>)
  fullName: ECS.Core.SystemBase.Subscribe<T>(System.Action<ECS.Events.IEvent>)
  nameWithType.vb: SystemBase.Subscribe(Of T)(Action(Of IEvent))
  fullName.vb: ECS.Core.SystemBase.Subscribe(Of T)(System.Action(Of ECS.Events.IEvent))
  name.vb: Subscribe(Of T)(Action(Of IEvent))
  spec.csharp:
  - uid: ECS.Core.SystemBase.Subscribe``1(System.Action{ECS.Events.IEvent})
    name: Subscribe
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Subscribe__1_System_Action_ECS_Events_IEvent__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: ECS.Events.IEvent
    name: IEvent
    href: ECS.Events.IEvent.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.Subscribe``1(System.Action{ECS.Events.IEvent})
    name: Subscribe
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Subscribe__1_System_Action_ECS_Events_IEvent__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: ECS.Events.IEvent
    name: IEvent
    href: ECS.Events.IEvent.html
  - name: )
  - name: )
- uid: ECS.Core.SystemBase.Publish``1({T})
  commentId: M:ECS.Core.SystemBase.Publish``1(``0)
  parent: ECS.Core.SystemBase
  definition: ECS.Core.SystemBase.Publish``1(``0)
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Publish__1___0_
  name: Publish<T>(T)
  nameWithType: SystemBase.Publish<T>(T)
  fullName: ECS.Core.SystemBase.Publish<T>(T)
  nameWithType.vb: SystemBase.Publish(Of T)(T)
  fullName.vb: ECS.Core.SystemBase.Publish(Of T)(T)
  name.vb: Publish(Of T)(T)
  spec.csharp:
  - uid: ECS.Core.SystemBase.Publish``1(``0)
    name: Publish
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Publish__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.Publish``1(``0)
    name: Publish
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Publish__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: ECS.Core.SystemBase.Pausible
  commentId: P:ECS.Core.SystemBase.Pausible
  parent: ECS.Core.SystemBase
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Pausible
  name: Pausible
  nameWithType: SystemBase.Pausible
  fullName: ECS.Core.SystemBase.Pausible
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ECS.Core
  commentId: N:ECS.Core
  href: ECS.html
  name: ECS.Core
  nameWithType: ECS.Core
  fullName: ECS.Core
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Core
    name: Core
    href: ECS.Core.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Core
    name: Core
    href: ECS.Core.html
- uid: ECS.Core.SystemBase.Publish``1(``0)
  commentId: M:ECS.Core.SystemBase.Publish``1(``0)
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Publish__1___0_
  name: Publish<T>(T)
  nameWithType: SystemBase.Publish<T>(T)
  fullName: ECS.Core.SystemBase.Publish<T>(T)
  nameWithType.vb: SystemBase.Publish(Of T)(T)
  fullName.vb: ECS.Core.SystemBase.Publish(Of T)(T)
  name.vb: Publish(Of T)(T)
  spec.csharp:
  - uid: ECS.Core.SystemBase.Publish``1(``0)
    name: Publish
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Publish__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.Publish``1(``0)
    name: Publish
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Publish__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.HashSet{System.ValueTuple{ECS.Core.Entity,ECS.Core.Entity}}
  commentId: T:System.Collections.Generic.HashSet{System.ValueTuple{ECS.Core.Entity,ECS.Core.Entity}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<(Entity, Entity)>
  nameWithType: HashSet<(Entity, Entity)>
  fullName: System.Collections.Generic.HashSet<(ECS.Core.Entity, ECS.Core.Entity)>
  nameWithType.vb: HashSet(Of (Entity, Entity))
  fullName.vb: System.Collections.Generic.HashSet(Of (ECS.Core.Entity, ECS.Core.Entity))
  name.vb: HashSet(Of (Entity, Entity))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: ','
  - name: " "
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: ','
  - name: " "
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.Dictionary{ECS.Core.Entity,Microsoft.Xna.Framework.Rectangle}
  commentId: T:System.Collections.Generic.Dictionary{ECS.Core.Entity,Microsoft.Xna.Framework.Rectangle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Entity, Rectangle>
  nameWithType: Dictionary<Entity, Rectangle>
  fullName: System.Collections.Generic.Dictionary<ECS.Core.Entity, Microsoft.Xna.Framework.Rectangle>
  nameWithType.vb: Dictionary(Of Entity, Rectangle)
  fullName.vb: System.Collections.Generic.Dictionary(Of ECS.Core.Entity, Microsoft.Xna.Framework.Rectangle)
  name.vb: Dictionary(Of Entity, Rectangle)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.Dictionary{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.Polygon},Microsoft.Xna.Framework.Vector2[]}
  commentId: T:System.Collections.Generic.Dictionary{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.Polygon},Microsoft.Xna.Framework.Vector2[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<(Entity, Polygon), Vector2[]>
  nameWithType: Dictionary<(Entity, Polygon), Vector2[]>
  fullName: System.Collections.Generic.Dictionary<(ECS.Core.Entity, ECS.Components.Collision.Polygon), Microsoft.Xna.Framework.Vector2[]>
  nameWithType.vb: Dictionary(Of (Entity, Polygon), Vector2())
  fullName.vb: System.Collections.Generic.Dictionary(Of (ECS.Core.Entity, ECS.Components.Collision.Polygon), Microsoft.Xna.Framework.Vector2())
  name.vb: Dictionary(Of (Entity, Polygon), Vector2())
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: ','
  - name: " "
  - uid: ECS.Components.Collision.Polygon
    name: Polygon
    href: ECS.Components.Collision.Polygon.html
  - name: )
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: ','
  - name: " "
  - uid: ECS.Components.Collision.Polygon
    name: Polygon
    href: ECS.Components.Collision.Polygon.html
  - name: )
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: ECS.Core.SystemBase.Initialize(ECS.Core.World)
  commentId: M:ECS.Core.SystemBase.Initialize(ECS.Core.World)
  parent: ECS.Core.SystemBase
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Initialize_ECS_Core_World_
  name: Initialize(World)
  nameWithType: SystemBase.Initialize(World)
  fullName: ECS.Core.SystemBase.Initialize(ECS.Core.World)
  spec.csharp:
  - uid: ECS.Core.SystemBase.Initialize(ECS.Core.World)
    name: Initialize
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Initialize_ECS_Core_World_
  - name: (
  - uid: ECS.Core.World
    name: World
    href: ECS.Core.World.html
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.Initialize(ECS.Core.World)
    name: Initialize
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Initialize_ECS_Core_World_
  - name: (
  - uid: ECS.Core.World
    name: World
    href: ECS.Core.World.html
  - name: )
- uid: ECS.Systems.Collision.CollisionDetectionSystem.Initialize*
  commentId: Overload:ECS.Systems.Collision.CollisionDetectionSystem.Initialize
  href: ECS.Systems.Collision.CollisionDetectionSystem.html#ECS_Systems_Collision_CollisionDetectionSystem_Initialize_ECS_Core_World_
  name: Initialize
  nameWithType: CollisionDetectionSystem.Initialize
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.Initialize
- uid: ECS.Core.World
  commentId: T:ECS.Core.World
  parent: ECS.Core
  href: ECS.Core.World.html
  name: World
  nameWithType: World
  fullName: ECS.Core.World
- uid: ECS.Core.SystemBase.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
  commentId: M:ECS.Core.SystemBase.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
  parent: ECS.Core.SystemBase
  isExternal: true
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Update_ECS_Core_World_Microsoft_Xna_Framework_GameTime_
  name: Update(World, GameTime)
  nameWithType: SystemBase.Update(World, GameTime)
  fullName: ECS.Core.SystemBase.Update(ECS.Core.World, Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: ECS.Core.SystemBase.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
    name: Update
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Update_ECS_Core_World_Microsoft_Xna_Framework_GameTime_
  - name: (
  - uid: ECS.Core.World
    name: World
    href: ECS.Core.World.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
    name: Update
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Update_ECS_Core_World_Microsoft_Xna_Framework_GameTime_
  - name: (
  - uid: ECS.Core.World
    name: World
    href: ECS.Core.World.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: ECS.Systems.Collision.CollisionDetectionSystem.Update*
  commentId: Overload:ECS.Systems.Collision.CollisionDetectionSystem.Update
  href: ECS.Systems.Collision.CollisionDetectionSystem.html#ECS_Systems_Collision_CollisionDetectionSystem_Update_ECS_Core_World_Microsoft_Xna_Framework_GameTime_
  name: Update
  nameWithType: CollisionDetectionSystem.Update
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: ECS.Systems.Collision.CollisionDetectionSystem.GetCollidableBodies*
  commentId: Overload:ECS.Systems.Collision.CollisionDetectionSystem.GetCollidableBodies
  href: ECS.Systems.Collision.CollisionDetectionSystem.html#ECS_Systems_Collision_CollisionDetectionSystem_GetCollidableBodies
  name: GetCollidableBodies
  nameWithType: CollisionDetectionSystem.GetCollidableBodies
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.GetCollidableBodies
- uid: System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,System.Nullable{ECS.Components.Physics.Velocity}}}
  commentId: T:System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Components.Collision.CollisionBody,ECS.Components.Physics.Position,System.Nullable{ECS.Components.Physics.Velocity}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<(Entity, CollisionBody, Position, Velocity?)>
  nameWithType: List<(Entity, CollisionBody, Position, Velocity?)>
  fullName: System.Collections.Generic.List<(ECS.Core.Entity, ECS.Components.Collision.CollisionBody, ECS.Components.Physics.Position, ECS.Components.Physics.Velocity?)>
  nameWithType.vb: List(Of (Entity, CollisionBody, Position, Velocity?))
  fullName.vb: System.Collections.Generic.List(Of (ECS.Core.Entity, ECS.Components.Collision.CollisionBody, ECS.Components.Physics.Position, ECS.Components.Physics.Velocity?))
  name.vb: List(Of (Entity, CollisionBody, Position, Velocity?))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: ','
  - name: " "
  - uid: ECS.Components.Collision.CollisionBody
    name: CollisionBody
    href: ECS.Components.Collision.CollisionBody.html
  - name: ','
  - name: " "
  - uid: ECS.Components.Physics.Position
    name: Position
    href: ECS.Components.Physics.Position.html
  - name: ','
  - name: " "
  - uid: ECS.Components.Physics.Velocity
    name: Velocity
    href: ECS.Components.Physics.Velocity.html
  - name: '?'
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: ','
  - name: " "
  - uid: ECS.Components.Collision.CollisionBody
    name: CollisionBody
    href: ECS.Components.Collision.CollisionBody.html
  - name: ','
  - name: " "
  - uid: ECS.Components.Physics.Position
    name: Position
    href: ECS.Components.Physics.Position.html
  - name: ','
  - name: " "
  - uid: ECS.Components.Physics.Velocity
    name: Velocity
    href: ECS.Components.Physics.Velocity.html
  - name: '?'
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ECS.Systems.Collision.CollisionDetectionSystem.CacheTransformedVertices*
  commentId: Overload:ECS.Systems.Collision.CollisionDetectionSystem.CacheTransformedVertices
  href: ECS.Systems.Collision.CollisionDetectionSystem.html#ECS_Systems_Collision_CollisionDetectionSystem_CacheTransformedVertices_System_Collections_Generic_List_System_ValueTuple_ECS_Core_Entity_ECS_Components_Collision_CollisionBody_ECS_Components_Physics_Position_System_Nullable_ECS_Components_Physics_Velocity____
  name: CacheTransformedVertices
  nameWithType: CollisionDetectionSystem.CacheTransformedVertices
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.CacheTransformedVertices
- uid: ECS.Systems.Collision.CollisionDetectionSystem.BroadPhase*
  commentId: Overload:ECS.Systems.Collision.CollisionDetectionSystem.BroadPhase
  href: ECS.Systems.Collision.CollisionDetectionSystem.html#ECS_Systems_Collision_CollisionDetectionSystem_BroadPhase_System_Collections_Generic_List_System_ValueTuple_ECS_Core_Entity_ECS_Components_Collision_CollisionBody_ECS_Components_Physics_Position_System_Nullable_ECS_Components_Physics_Velocity____
  name: BroadPhase
  nameWithType: CollisionDetectionSystem.BroadPhase
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.BroadPhase
- uid: System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Core.Entity}}
  commentId: T:System.Collections.Generic.List{System.ValueTuple{ECS.Core.Entity,ECS.Core.Entity}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<(Entity, Entity)>
  nameWithType: List<(Entity, Entity)>
  fullName: System.Collections.Generic.List<(ECS.Core.Entity, ECS.Core.Entity)>
  nameWithType.vb: List(Of (Entity, Entity))
  fullName.vb: System.Collections.Generic.List(Of (ECS.Core.Entity, ECS.Core.Entity))
  name.vb: List(Of (Entity, Entity))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: ','
  - name: " "
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: ','
  - name: " "
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
  - name: )
- uid: ECS.Systems.Collision.CollisionDetectionSystem.GetExpandedAABB*
  commentId: Overload:ECS.Systems.Collision.CollisionDetectionSystem.GetExpandedAABB
  href: ECS.Systems.Collision.CollisionDetectionSystem.html#ECS_Systems_Collision_CollisionDetectionSystem_GetExpandedAABB_ECS_Core_Entity_ECS_Components_Collision_CollisionBody_ECS_Components_Physics_Position_
  name: GetExpandedAABB
  nameWithType: CollisionDetectionSystem.GetExpandedAABB
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.GetExpandedAABB
- uid: ECS.Core.Entity
  commentId: T:ECS.Core.Entity
  parent: ECS.Core
  href: ECS.Core.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: ECS.Core.Entity
- uid: ECS.Components.Collision.CollisionBody
  commentId: T:ECS.Components.Collision.CollisionBody
  parent: ECS.Components.Collision
  href: ECS.Components.Collision.CollisionBody.html
  name: CollisionBody
  nameWithType: CollisionBody
  fullName: ECS.Components.Collision.CollisionBody
- uid: ECS.Components.Physics.Position
  commentId: T:ECS.Components.Physics.Position
  parent: ECS.Components.Physics
  href: ECS.Components.Physics.Position.html
  name: Position
  nameWithType: Position
  fullName: ECS.Components.Physics.Position
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: ECS.Components.Collision
  commentId: N:ECS.Components.Collision
  href: ECS.html
  name: ECS.Components.Collision
  nameWithType: ECS.Components.Collision
  fullName: ECS.Components.Collision
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Components
    name: Components
    href: ECS.Components.html
  - name: .
  - uid: ECS.Components.Collision
    name: Collision
    href: ECS.Components.Collision.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Components
    name: Components
    href: ECS.Components.html
  - name: .
  - uid: ECS.Components.Collision
    name: Collision
    href: ECS.Components.Collision.html
- uid: ECS.Components.Physics
  commentId: N:ECS.Components.Physics
  href: ECS.html
  name: ECS.Components.Physics
  nameWithType: ECS.Components.Physics
  fullName: ECS.Components.Physics
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Components
    name: Components
    href: ECS.Components.html
  - name: .
  - uid: ECS.Components.Physics
    name: Physics
    href: ECS.Components.Physics.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Components
    name: Components
    href: ECS.Components.html
  - name: .
  - uid: ECS.Components.Physics
    name: Physics
    href: ECS.Components.Physics.html
- uid: ECS.Systems.Collision.CollisionDetectionSystem.CalculateAABB*
  commentId: Overload:ECS.Systems.Collision.CollisionDetectionSystem.CalculateAABB
  href: ECS.Systems.Collision.CollisionDetectionSystem.html#ECS_Systems_Collision_CollisionDetectionSystem_CalculateAABB_ECS_Core_Entity_ECS_Components_Collision_CollisionBody_ECS_Components_Physics_Position_
  name: CalculateAABB
  nameWithType: CollisionDetectionSystem.CalculateAABB
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.CalculateAABB
- uid: ECS.Systems.Collision.CollisionDetectionSystem.NarrowPhase*
  commentId: Overload:ECS.Systems.Collision.CollisionDetectionSystem.NarrowPhase
  href: ECS.Systems.Collision.CollisionDetectionSystem.html#ECS_Systems_Collision_CollisionDetectionSystem_NarrowPhase_System_Collections_Generic_List_System_ValueTuple_ECS_Core_Entity_ECS_Core_Entity___
  name: NarrowPhase
  nameWithType: CollisionDetectionSystem.NarrowPhase
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.NarrowPhase
- uid: System.Collections.Generic.List{ECS.Components.Collision.Contact}
  commentId: T:System.Collections.Generic.List{ECS.Components.Collision.Contact}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Contact>
  nameWithType: List<Contact>
  fullName: System.Collections.Generic.List<ECS.Components.Collision.Contact>
  nameWithType.vb: List(Of Contact)
  fullName.vb: System.Collections.Generic.List(Of ECS.Components.Collision.Contact)
  name.vb: List(Of Contact)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: ECS.Components.Collision.Contact
    name: Contact
    href: ECS.Components.Collision.Contact.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: ECS.Components.Collision.Contact
    name: Contact
    href: ECS.Components.Collision.Contact.html
  - name: )
- uid: ECS.Systems.Collision.CollisionDetectionSystem.ShouldSkipPlatformCollision*
  commentId: Overload:ECS.Systems.Collision.CollisionDetectionSystem.ShouldSkipPlatformCollision
  href: ECS.Systems.Collision.CollisionDetectionSystem.html#ECS_Systems_Collision_CollisionDetectionSystem_ShouldSkipPlatformCollision_ECS_Core_Entity_ECS_Core_Entity_
  name: ShouldSkipPlatformCollision
  nameWithType: CollisionDetectionSystem.ShouldSkipPlatformCollision
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.ShouldSkipPlatformCollision
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ECS.Systems.Collision.CollisionDetectionSystem.ProcessEntityPairContacts*
  commentId: Overload:ECS.Systems.Collision.CollisionDetectionSystem.ProcessEntityPairContacts
  href: ECS.Systems.Collision.CollisionDetectionSystem.html#ECS_Systems_Collision_CollisionDetectionSystem_ProcessEntityPairContacts_ECS_Core_Entity_ECS_Core_Entity_ECS_Components_Collision_CollisionBody_ECS_Components_Collision_CollisionBody_ECS_Components_Physics_Position_ECS_Components_Physics_Position_
  name: ProcessEntityPairContacts
  nameWithType: CollisionDetectionSystem.ProcessEntityPairContacts
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.ProcessEntityPairContacts
- uid: ECS.Systems.Collision.CollisionDetectionSystem.CheckPolygonCollision*
  commentId: Overload:ECS.Systems.Collision.CollisionDetectionSystem.CheckPolygonCollision
  href: ECS.Systems.Collision.CollisionDetectionSystem.html#ECS_Systems_Collision_CollisionDetectionSystem_CheckPolygonCollision_ECS_Core_Entity_ECS_Core_Entity_Microsoft_Xna_Framework_Vector2___Microsoft_Xna_Framework_Vector2___ECS_Components_Collision_Polygon_ECS_Components_Collision_Polygon_
  name: CheckPolygonCollision
  nameWithType: CollisionDetectionSystem.CheckPolygonCollision
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.CheckPolygonCollision
- uid: Microsoft.Xna.Framework.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: Microsoft.Xna.Framework.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: Microsoft.Xna.Framework.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: ECS.Components.Collision.Polygon
  commentId: T:ECS.Components.Collision.Polygon
  parent: ECS.Components.Collision
  href: ECS.Components.Collision.Polygon.html
  name: Polygon
  nameWithType: Polygon
  fullName: ECS.Components.Collision.Polygon
- uid: System.Nullable{ECS.Components.Collision.Contact}
  commentId: T:System.Nullable{ECS.Components.Collision.Contact}
  parent: System
  definition: System.Nullable`1
  href: ECS.Components.Collision.Contact.html
  name: Contact?
  nameWithType: Contact?
  fullName: ECS.Components.Collision.Contact?
  spec.csharp:
  - uid: ECS.Components.Collision.Contact
    name: Contact
    href: ECS.Components.Collision.Contact.html
  - name: '?'
  spec.vb:
  - uid: ECS.Components.Collision.Contact
    name: Contact
    href: ECS.Components.Collision.Contact.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ECS.Systems.Collision.CollisionDetectionSystem.GetSATAxes*
  commentId: Overload:ECS.Systems.Collision.CollisionDetectionSystem.GetSATAxes
  href: ECS.Systems.Collision.CollisionDetectionSystem.html#ECS_Systems_Collision_CollisionDetectionSystem_GetSATAxes_Microsoft_Xna_Framework_Vector2___Microsoft_Xna_Framework_Vector2___
  name: GetSATAxes
  nameWithType: CollisionDetectionSystem.GetSATAxes
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.GetSATAxes
- uid: System.Collections.Generic.List{Microsoft.Xna.Framework.Vector2}
  commentId: T:System.Collections.Generic.List{Microsoft.Xna.Framework.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector2>
  nameWithType: List<Vector2>
  fullName: System.Collections.Generic.List<Microsoft.Xna.Framework.Vector2>
  nameWithType.vb: List(Of Vector2)
  fullName.vb: System.Collections.Generic.List(Of Microsoft.Xna.Framework.Vector2)
  name.vb: List(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: ECS.Systems.Collision.CollisionDetectionSystem.CalculateContactPoint*
  commentId: Overload:ECS.Systems.Collision.CollisionDetectionSystem.CalculateContactPoint
  href: ECS.Systems.Collision.CollisionDetectionSystem.html#ECS_Systems_Collision_CollisionDetectionSystem_CalculateContactPoint_Microsoft_Xna_Framework_Vector2___Microsoft_Xna_Framework_Vector2___Microsoft_Xna_Framework_Vector2_
  name: CalculateContactPoint
  nameWithType: CollisionDetectionSystem.CalculateContactPoint
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.CalculateContactPoint
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: ECS.Systems.Collision.CollisionDetectionSystem.ProcessContacts*
  commentId: Overload:ECS.Systems.Collision.CollisionDetectionSystem.ProcessContacts
  href: ECS.Systems.Collision.CollisionDetectionSystem.html#ECS_Systems_Collision_CollisionDetectionSystem_ProcessContacts_System_Collections_Generic_List_ECS_Components_Collision_Contact__
  name: ProcessContacts
  nameWithType: CollisionDetectionSystem.ProcessContacts
  fullName: ECS.Systems.Collision.CollisionDetectionSystem.ProcessContacts
