### YamlMime:ManagedReference
items:
- uid: ECS.Systems.Effects.ChimneySmokeSystem
  commentId: T:ECS.Systems.Effects.ChimneySmokeSystem
  id: ChimneySmokeSystem
  parent: ECS.Systems.Effects
  children:
  - ECS.Systems.Effects.ChimneySmokeSystem.#ctor
  - ECS.Systems.Effects.ChimneySmokeSystem.CycleSmokeState(ECS.Core.Entity)
  - ECS.Systems.Effects.ChimneySmokeSystem.GetAnimationStateFromSmokeState(ECS.Components.Objects.SmokeState)
  - ECS.Systems.Effects.ChimneySmokeSystem.GetDurationForState(ECS.Core.Entity,ECS.Components.Objects.SmokeState)
  - ECS.Systems.Effects.ChimneySmokeSystem.GetNextState(ECS.Components.Objects.SmokeState)
  - ECS.Systems.Effects.ChimneySmokeSystem.HandleCollision(ECS.Events.IEvent)
  - ECS.Systems.Effects.ChimneySmokeSystem.HandleTimerExpired(ECS.Events.IEvent)
  - ECS.Systems.Effects.ChimneySmokeSystem.Initialize(ECS.Core.World)
  - ECS.Systems.Effects.ChimneySmokeSystem.InitializeTimerIfNeeded(ECS.Core.Entity)
  - ECS.Systems.Effects.ChimneySmokeSystem.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
  - ECS.Systems.Effects.ChimneySmokeSystem.animationStateMap
  - ECS.Systems.Effects.ChimneySmokeSystem.nextStateMap
  langs:
  - csharp
  - vb
  name: ChimneySmokeSystem
  nameWithType: ChimneySmokeSystem
  fullName: ECS.Systems.Effects.ChimneySmokeSystem
  type: Class
  source:
    remote:
      path: Systems/Map/ChimneySmokeSystem.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: ChimneySmokeSystem
    path: ../Systems/Map/ChimneySmokeSystem.cs
    startLine: 9
  assemblies:
  - ECS
  namespace: ECS.Systems.Effects
  syntax:
    content: 'public class ChimneySmokeSystem : SystemBase, ISystem'
    content.vb: Public Class ChimneySmokeSystem Inherits SystemBase Implements ISystem
  inheritance:
  - System.Object
  - ECS.Core.SystemBase
  implements:
  - ECS.Core.ISystem
  inheritedMembers:
  - ECS.Core.SystemBase.World
  - ECS.Core.SystemBase.HasComponents``1(ECS.Core.Entity)
  - ECS.Core.SystemBase.GetEntitiesWith``1(ECS.Core.Entity)
  - ECS.Core.SystemBase.GetComponent``1(ECS.Core.Entity)
  - ECS.Core.SystemBase.Subscribe``1(System.Action{ECS.Events.IEvent})
  - ECS.Core.SystemBase.Publish``1({T})
  - ECS.Core.SystemBase.Pausible
  - ECS.Core.SystemBase.UseScaledGameTime
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ECS.Systems.Effects.ChimneySmokeSystem.nextStateMap
  commentId: F:ECS.Systems.Effects.ChimneySmokeSystem.nextStateMap
  id: nextStateMap
  parent: ECS.Systems.Effects.ChimneySmokeSystem
  langs:
  - csharp
  - vb
  name: nextStateMap
  nameWithType: ChimneySmokeSystem.nextStateMap
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.nextStateMap
  type: Field
  source:
    remote:
      path: Systems/Map/ChimneySmokeSystem.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: nextStateMap
    path: ../Systems/Map/ChimneySmokeSystem.cs
    startLine: 12
  assemblies:
  - ECS
  namespace: ECS.Systems.Effects
  syntax:
    content: private readonly Dictionary<SmokeState, SmokeState> nextStateMap
    return:
      type: System.Collections.Generic.Dictionary{ECS.Components.Objects.SmokeState,ECS.Components.Objects.SmokeState}
    content.vb: Private ReadOnly nextStateMap As Dictionary(Of SmokeState, SmokeState)
- uid: ECS.Systems.Effects.ChimneySmokeSystem.animationStateMap
  commentId: F:ECS.Systems.Effects.ChimneySmokeSystem.animationStateMap
  id: animationStateMap
  parent: ECS.Systems.Effects.ChimneySmokeSystem
  langs:
  - csharp
  - vb
  name: animationStateMap
  nameWithType: ChimneySmokeSystem.animationStateMap
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.animationStateMap
  type: Field
  source:
    remote:
      path: Systems/Map/ChimneySmokeSystem.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: animationStateMap
    path: ../Systems/Map/ChimneySmokeSystem.cs
    startLine: 13
  assemblies:
  - ECS
  namespace: ECS.Systems.Effects
  syntax:
    content: private readonly Dictionary<SmokeState, string> animationStateMap
    return:
      type: System.Collections.Generic.Dictionary{ECS.Components.Objects.SmokeState,System.String}
    content.vb: Private ReadOnly animationStateMap As Dictionary(Of SmokeState, String)
- uid: ECS.Systems.Effects.ChimneySmokeSystem.#ctor
  commentId: M:ECS.Systems.Effects.ChimneySmokeSystem.#ctor
  id: '#ctor'
  parent: ECS.Systems.Effects.ChimneySmokeSystem
  langs:
  - csharp
  - vb
  name: ChimneySmokeSystem()
  nameWithType: ChimneySmokeSystem.ChimneySmokeSystem()
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.ChimneySmokeSystem()
  type: Constructor
  source:
    remote:
      path: Systems/Map/ChimneySmokeSystem.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: .ctor
    path: ../Systems/Map/ChimneySmokeSystem.cs
    startLine: 15
  assemblies:
  - ECS
  namespace: ECS.Systems.Effects
  syntax:
    content: public ChimneySmokeSystem()
    content.vb: Public Sub New()
  overload: ECS.Systems.Effects.ChimneySmokeSystem.#ctor*
  nameWithType.vb: ChimneySmokeSystem.New()
  fullName.vb: ECS.Systems.Effects.ChimneySmokeSystem.New()
  name.vb: New()
- uid: ECS.Systems.Effects.ChimneySmokeSystem.Initialize(ECS.Core.World)
  commentId: M:ECS.Systems.Effects.ChimneySmokeSystem.Initialize(ECS.Core.World)
  id: Initialize(ECS.Core.World)
  parent: ECS.Systems.Effects.ChimneySmokeSystem
  langs:
  - csharp
  - vb
  name: Initialize(World)
  nameWithType: ChimneySmokeSystem.Initialize(World)
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.Initialize(ECS.Core.World)
  type: Method
  source:
    remote:
      path: Systems/Map/ChimneySmokeSystem.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: Initialize
    path: ../Systems/Map/ChimneySmokeSystem.cs
    startLine: 36
  assemblies:
  - ECS
  namespace: ECS.Systems.Effects
  example: []
  syntax:
    content: public override void Initialize(World world)
    parameters:
    - id: world
      type: ECS.Core.World
    content.vb: Public Overrides Sub Initialize(world As World)
  overridden: ECS.Core.SystemBase.Initialize(ECS.Core.World)
  overload: ECS.Systems.Effects.ChimneySmokeSystem.Initialize*
- uid: ECS.Systems.Effects.ChimneySmokeSystem.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
  commentId: M:ECS.Systems.Effects.ChimneySmokeSystem.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
  id: Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
  parent: ECS.Systems.Effects.ChimneySmokeSystem
  langs:
  - csharp
  - vb
  name: Update(World, GameTime)
  nameWithType: ChimneySmokeSystem.Update(World, GameTime)
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.Update(ECS.Core.World, Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: Systems/Map/ChimneySmokeSystem.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: Update
    path: ../Systems/Map/ChimneySmokeSystem.cs
    startLine: 43
  assemblies:
  - ECS
  namespace: ECS.Systems.Effects
  example: []
  syntax:
    content: public override void Update(World world, GameTime gameTime)
    parameters:
    - id: world
      type: ECS.Core.World
    - id: gameTime
      type: Microsoft.Xna.Framework.GameTime
    content.vb: Public Overrides Sub Update(world As World, gameTime As GameTime)
  overridden: ECS.Core.SystemBase.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
  overload: ECS.Systems.Effects.ChimneySmokeSystem.Update*
- uid: ECS.Systems.Effects.ChimneySmokeSystem.InitializeTimerIfNeeded(ECS.Core.Entity)
  commentId: M:ECS.Systems.Effects.ChimneySmokeSystem.InitializeTimerIfNeeded(ECS.Core.Entity)
  id: InitializeTimerIfNeeded(ECS.Core.Entity)
  parent: ECS.Systems.Effects.ChimneySmokeSystem
  langs:
  - csharp
  - vb
  name: InitializeTimerIfNeeded(Entity)
  nameWithType: ChimneySmokeSystem.InitializeTimerIfNeeded(Entity)
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.InitializeTimerIfNeeded(ECS.Core.Entity)
  type: Method
  source:
    remote:
      path: Systems/Map/ChimneySmokeSystem.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: InitializeTimerIfNeeded
    path: ../Systems/Map/ChimneySmokeSystem.cs
    startLine: 58
  assemblies:
  - ECS
  namespace: ECS.Systems.Effects
  syntax:
    content: private void InitializeTimerIfNeeded(Entity entity)
    parameters:
    - id: entity
      type: ECS.Core.Entity
    content.vb: Private Sub InitializeTimerIfNeeded(entity As Entity)
  overload: ECS.Systems.Effects.ChimneySmokeSystem.InitializeTimerIfNeeded*
- uid: ECS.Systems.Effects.ChimneySmokeSystem.HandleTimerExpired(ECS.Events.IEvent)
  commentId: M:ECS.Systems.Effects.ChimneySmokeSystem.HandleTimerExpired(ECS.Events.IEvent)
  id: HandleTimerExpired(ECS.Events.IEvent)
  parent: ECS.Systems.Effects.ChimneySmokeSystem
  langs:
  - csharp
  - vb
  name: HandleTimerExpired(IEvent)
  nameWithType: ChimneySmokeSystem.HandleTimerExpired(IEvent)
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.HandleTimerExpired(ECS.Events.IEvent)
  type: Method
  source:
    remote:
      path: Systems/Map/ChimneySmokeSystem.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: HandleTimerExpired
    path: ../Systems/Map/ChimneySmokeSystem.cs
    startLine: 96
  assemblies:
  - ECS
  namespace: ECS.Systems.Effects
  syntax:
    content: private void HandleTimerExpired(IEvent evt)
    parameters:
    - id: evt
      type: ECS.Events.IEvent
    content.vb: Private Sub HandleTimerExpired(evt As IEvent)
  overload: ECS.Systems.Effects.ChimneySmokeSystem.HandleTimerExpired*
- uid: ECS.Systems.Effects.ChimneySmokeSystem.HandleCollision(ECS.Events.IEvent)
  commentId: M:ECS.Systems.Effects.ChimneySmokeSystem.HandleCollision(ECS.Events.IEvent)
  id: HandleCollision(ECS.Events.IEvent)
  parent: ECS.Systems.Effects.ChimneySmokeSystem
  langs:
  - csharp
  - vb
  name: HandleCollision(IEvent)
  nameWithType: ChimneySmokeSystem.HandleCollision(IEvent)
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.HandleCollision(ECS.Events.IEvent)
  type: Method
  source:
    remote:
      path: Systems/Map/ChimneySmokeSystem.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: HandleCollision
    path: ../Systems/Map/ChimneySmokeSystem.cs
    startLine: 110
  assemblies:
  - ECS
  namespace: ECS.Systems.Effects
  syntax:
    content: private void HandleCollision(IEvent evt)
    parameters:
    - id: evt
      type: ECS.Events.IEvent
    content.vb: Private Sub HandleCollision(evt As IEvent)
  overload: ECS.Systems.Effects.ChimneySmokeSystem.HandleCollision*
- uid: ECS.Systems.Effects.ChimneySmokeSystem.GetAnimationStateFromSmokeState(ECS.Components.Objects.SmokeState)
  commentId: M:ECS.Systems.Effects.ChimneySmokeSystem.GetAnimationStateFromSmokeState(ECS.Components.Objects.SmokeState)
  id: GetAnimationStateFromSmokeState(ECS.Components.Objects.SmokeState)
  parent: ECS.Systems.Effects.ChimneySmokeSystem
  langs:
  - csharp
  - vb
  name: GetAnimationStateFromSmokeState(SmokeState)
  nameWithType: ChimneySmokeSystem.GetAnimationStateFromSmokeState(SmokeState)
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.GetAnimationStateFromSmokeState(ECS.Components.Objects.SmokeState)
  type: Method
  source:
    remote:
      path: Systems/Map/ChimneySmokeSystem.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: GetAnimationStateFromSmokeState
    path: ../Systems/Map/ChimneySmokeSystem.cs
    startLine: 154
  assemblies:
  - ECS
  namespace: ECS.Systems.Effects
  syntax:
    content: private string GetAnimationStateFromSmokeState(SmokeState state)
    parameters:
    - id: state
      type: ECS.Components.Objects.SmokeState
    return:
      type: System.String
    content.vb: Private Function GetAnimationStateFromSmokeState(state As SmokeState) As String
  overload: ECS.Systems.Effects.ChimneySmokeSystem.GetAnimationStateFromSmokeState*
- uid: ECS.Systems.Effects.ChimneySmokeSystem.GetDurationForState(ECS.Core.Entity,ECS.Components.Objects.SmokeState)
  commentId: M:ECS.Systems.Effects.ChimneySmokeSystem.GetDurationForState(ECS.Core.Entity,ECS.Components.Objects.SmokeState)
  id: GetDurationForState(ECS.Core.Entity,ECS.Components.Objects.SmokeState)
  parent: ECS.Systems.Effects.ChimneySmokeSystem
  langs:
  - csharp
  - vb
  name: GetDurationForState(Entity, SmokeState)
  nameWithType: ChimneySmokeSystem.GetDurationForState(Entity, SmokeState)
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.GetDurationForState(ECS.Core.Entity, ECS.Components.Objects.SmokeState)
  type: Method
  source:
    remote:
      path: Systems/Map/ChimneySmokeSystem.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: GetDurationForState
    path: ../Systems/Map/ChimneySmokeSystem.cs
    startLine: 159
  assemblies:
  - ECS
  namespace: ECS.Systems.Effects
  syntax:
    content: private float GetDurationForState(Entity entity, SmokeState state)
    parameters:
    - id: entity
      type: ECS.Core.Entity
    - id: state
      type: ECS.Components.Objects.SmokeState
    return:
      type: System.Single
    content.vb: Private Function GetDurationForState(entity As Entity, state As SmokeState) As Single
  overload: ECS.Systems.Effects.ChimneySmokeSystem.GetDurationForState*
- uid: ECS.Systems.Effects.ChimneySmokeSystem.GetNextState(ECS.Components.Objects.SmokeState)
  commentId: M:ECS.Systems.Effects.ChimneySmokeSystem.GetNextState(ECS.Components.Objects.SmokeState)
  id: GetNextState(ECS.Components.Objects.SmokeState)
  parent: ECS.Systems.Effects.ChimneySmokeSystem
  langs:
  - csharp
  - vb
  name: GetNextState(SmokeState)
  nameWithType: ChimneySmokeSystem.GetNextState(SmokeState)
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.GetNextState(ECS.Components.Objects.SmokeState)
  type: Method
  source:
    remote:
      path: Systems/Map/ChimneySmokeSystem.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: GetNextState
    path: ../Systems/Map/ChimneySmokeSystem.cs
    startLine: 173
  assemblies:
  - ECS
  namespace: ECS.Systems.Effects
  syntax:
    content: private SmokeState GetNextState(SmokeState currentState)
    parameters:
    - id: currentState
      type: ECS.Components.Objects.SmokeState
    return:
      type: ECS.Components.Objects.SmokeState
    content.vb: Private Function GetNextState(currentState As SmokeState) As SmokeState
  overload: ECS.Systems.Effects.ChimneySmokeSystem.GetNextState*
- uid: ECS.Systems.Effects.ChimneySmokeSystem.CycleSmokeState(ECS.Core.Entity)
  commentId: M:ECS.Systems.Effects.ChimneySmokeSystem.CycleSmokeState(ECS.Core.Entity)
  id: CycleSmokeState(ECS.Core.Entity)
  parent: ECS.Systems.Effects.ChimneySmokeSystem
  langs:
  - csharp
  - vb
  name: CycleSmokeState(Entity)
  nameWithType: ChimneySmokeSystem.CycleSmokeState(Entity)
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.CycleSmokeState(ECS.Core.Entity)
  type: Method
  source:
    remote:
      path: Systems/Map/ChimneySmokeSystem.cs
      branch: Sprint5
      repo: https://github.com/zehdari/TeamGame
    id: CycleSmokeState
    path: ../Systems/Map/ChimneySmokeSystem.cs
    startLine: 178
  assemblies:
  - ECS
  namespace: ECS.Systems.Effects
  syntax:
    content: private void CycleSmokeState(Entity entity)
    parameters:
    - id: entity
      type: ECS.Core.Entity
    content.vb: Private Sub CycleSmokeState(entity As Entity)
  overload: ECS.Systems.Effects.ChimneySmokeSystem.CycleSmokeState*
references:
- uid: ECS.Systems.Effects
  commentId: N:ECS.Systems.Effects
  href: ECS.html
  name: ECS.Systems.Effects
  nameWithType: ECS.Systems.Effects
  fullName: ECS.Systems.Effects
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Systems
    name: Systems
    href: ECS.Systems.html
  - name: .
  - uid: ECS.Systems.Effects
    name: Effects
    href: ECS.Systems.Effects.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Systems
    name: Systems
    href: ECS.Systems.html
  - name: .
  - uid: ECS.Systems.Effects
    name: Effects
    href: ECS.Systems.Effects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ECS.Core.SystemBase
  commentId: T:ECS.Core.SystemBase
  parent: ECS.Core
  href: ECS.Core.SystemBase.html
  name: SystemBase
  nameWithType: SystemBase
  fullName: ECS.Core.SystemBase
- uid: ECS.Core.ISystem
  commentId: T:ECS.Core.ISystem
  parent: ECS.Core
  href: ECS.Core.ISystem.html
  name: ISystem
  nameWithType: ISystem
  fullName: ECS.Core.ISystem
- uid: ECS.Core.SystemBase.World
  commentId: P:ECS.Core.SystemBase.World
  parent: ECS.Core.SystemBase
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_World
  name: World
  nameWithType: SystemBase.World
  fullName: ECS.Core.SystemBase.World
- uid: ECS.Core.SystemBase.HasComponents``1(ECS.Core.Entity)
  commentId: M:ECS.Core.SystemBase.HasComponents``1(ECS.Core.Entity)
  parent: ECS.Core.SystemBase
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_HasComponents__1_ECS_Core_Entity_
  name: HasComponents<T>(Entity)
  nameWithType: SystemBase.HasComponents<T>(Entity)
  fullName: ECS.Core.SystemBase.HasComponents<T>(ECS.Core.Entity)
  nameWithType.vb: SystemBase.HasComponents(Of T)(Entity)
  fullName.vb: ECS.Core.SystemBase.HasComponents(Of T)(ECS.Core.Entity)
  name.vb: HasComponents(Of T)(Entity)
  spec.csharp:
  - uid: ECS.Core.SystemBase.HasComponents``1(ECS.Core.Entity)
    name: HasComponents
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_HasComponents__1_ECS_Core_Entity_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.HasComponents``1(ECS.Core.Entity)
    name: HasComponents
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_HasComponents__1_ECS_Core_Entity_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
- uid: ECS.Core.SystemBase.GetEntitiesWith``1(ECS.Core.Entity)
  commentId: M:ECS.Core.SystemBase.GetEntitiesWith``1(ECS.Core.Entity)
  parent: ECS.Core.SystemBase
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_GetEntitiesWith__1_ECS_Core_Entity_
  name: GetEntitiesWith<T>(Entity)
  nameWithType: SystemBase.GetEntitiesWith<T>(Entity)
  fullName: ECS.Core.SystemBase.GetEntitiesWith<T>(ECS.Core.Entity)
  nameWithType.vb: SystemBase.GetEntitiesWith(Of T)(Entity)
  fullName.vb: ECS.Core.SystemBase.GetEntitiesWith(Of T)(ECS.Core.Entity)
  name.vb: GetEntitiesWith(Of T)(Entity)
  spec.csharp:
  - uid: ECS.Core.SystemBase.GetEntitiesWith``1(ECS.Core.Entity)
    name: GetEntitiesWith
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_GetEntitiesWith__1_ECS_Core_Entity_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.GetEntitiesWith``1(ECS.Core.Entity)
    name: GetEntitiesWith
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_GetEntitiesWith__1_ECS_Core_Entity_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
- uid: ECS.Core.SystemBase.GetComponent``1(ECS.Core.Entity)
  commentId: M:ECS.Core.SystemBase.GetComponent``1(ECS.Core.Entity)
  parent: ECS.Core.SystemBase
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_GetComponent__1_ECS_Core_Entity_
  name: GetComponent<T>(Entity)
  nameWithType: SystemBase.GetComponent<T>(Entity)
  fullName: ECS.Core.SystemBase.GetComponent<T>(ECS.Core.Entity)
  nameWithType.vb: SystemBase.GetComponent(Of T)(Entity)
  fullName.vb: ECS.Core.SystemBase.GetComponent(Of T)(ECS.Core.Entity)
  name.vb: GetComponent(Of T)(Entity)
  spec.csharp:
  - uid: ECS.Core.SystemBase.GetComponent``1(ECS.Core.Entity)
    name: GetComponent
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_GetComponent__1_ECS_Core_Entity_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.GetComponent``1(ECS.Core.Entity)
    name: GetComponent
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_GetComponent__1_ECS_Core_Entity_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: ECS.Core.Entity
    name: Entity
    href: ECS.Core.Entity.html
  - name: )
- uid: ECS.Core.SystemBase.Subscribe``1(System.Action{ECS.Events.IEvent})
  commentId: M:ECS.Core.SystemBase.Subscribe``1(System.Action{ECS.Events.IEvent})
  parent: ECS.Core.SystemBase
  isExternal: true
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Subscribe__1_System_Action_ECS_Events_IEvent__
  name: Subscribe<T>(Action<IEvent>)
  nameWithType: SystemBase.Subscribe<T>(Action<IEvent>)
  fullName: ECS.Core.SystemBase.Subscribe<T>(System.Action<ECS.Events.IEvent>)
  nameWithType.vb: SystemBase.Subscribe(Of T)(Action(Of IEvent))
  fullName.vb: ECS.Core.SystemBase.Subscribe(Of T)(System.Action(Of ECS.Events.IEvent))
  name.vb: Subscribe(Of T)(Action(Of IEvent))
  spec.csharp:
  - uid: ECS.Core.SystemBase.Subscribe``1(System.Action{ECS.Events.IEvent})
    name: Subscribe
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Subscribe__1_System_Action_ECS_Events_IEvent__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: ECS.Events.IEvent
    name: IEvent
    href: ECS.Events.IEvent.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.Subscribe``1(System.Action{ECS.Events.IEvent})
    name: Subscribe
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Subscribe__1_System_Action_ECS_Events_IEvent__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: ECS.Events.IEvent
    name: IEvent
    href: ECS.Events.IEvent.html
  - name: )
  - name: )
- uid: ECS.Core.SystemBase.Publish``1({T})
  commentId: M:ECS.Core.SystemBase.Publish``1(``0)
  parent: ECS.Core.SystemBase
  definition: ECS.Core.SystemBase.Publish``1(``0)
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Publish__1___0_
  name: Publish<T>(T)
  nameWithType: SystemBase.Publish<T>(T)
  fullName: ECS.Core.SystemBase.Publish<T>(T)
  nameWithType.vb: SystemBase.Publish(Of T)(T)
  fullName.vb: ECS.Core.SystemBase.Publish(Of T)(T)
  name.vb: Publish(Of T)(T)
  spec.csharp:
  - uid: ECS.Core.SystemBase.Publish``1(``0)
    name: Publish
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Publish__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.Publish``1(``0)
    name: Publish
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Publish__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: ECS.Core.SystemBase.Pausible
  commentId: P:ECS.Core.SystemBase.Pausible
  parent: ECS.Core.SystemBase
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Pausible
  name: Pausible
  nameWithType: SystemBase.Pausible
  fullName: ECS.Core.SystemBase.Pausible
- uid: ECS.Core.SystemBase.UseScaledGameTime
  commentId: P:ECS.Core.SystemBase.UseScaledGameTime
  parent: ECS.Core.SystemBase
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_UseScaledGameTime
  name: UseScaledGameTime
  nameWithType: SystemBase.UseScaledGameTime
  fullName: ECS.Core.SystemBase.UseScaledGameTime
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ECS.Core
  commentId: N:ECS.Core
  href: ECS.html
  name: ECS.Core
  nameWithType: ECS.Core
  fullName: ECS.Core
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Core
    name: Core
    href: ECS.Core.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Core
    name: Core
    href: ECS.Core.html
- uid: ECS.Core.SystemBase.Publish``1(``0)
  commentId: M:ECS.Core.SystemBase.Publish``1(``0)
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Publish__1___0_
  name: Publish<T>(T)
  nameWithType: SystemBase.Publish<T>(T)
  fullName: ECS.Core.SystemBase.Publish<T>(T)
  nameWithType.vb: SystemBase.Publish(Of T)(T)
  fullName.vb: ECS.Core.SystemBase.Publish(Of T)(T)
  name.vb: Publish(Of T)(T)
  spec.csharp:
  - uid: ECS.Core.SystemBase.Publish``1(``0)
    name: Publish
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Publish__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.Publish``1(``0)
    name: Publish
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Publish__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.Dictionary{ECS.Components.Objects.SmokeState,ECS.Components.Objects.SmokeState}
  commentId: T:System.Collections.Generic.Dictionary{ECS.Components.Objects.SmokeState,ECS.Components.Objects.SmokeState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<SmokeState, SmokeState>
  nameWithType: Dictionary<SmokeState, SmokeState>
  fullName: System.Collections.Generic.Dictionary<ECS.Components.Objects.SmokeState, ECS.Components.Objects.SmokeState>
  nameWithType.vb: Dictionary(Of SmokeState, SmokeState)
  fullName.vb: System.Collections.Generic.Dictionary(Of ECS.Components.Objects.SmokeState, ECS.Components.Objects.SmokeState)
  name.vb: Dictionary(Of SmokeState, SmokeState)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: ECS.Components.Objects.SmokeState
    name: SmokeState
    href: ECS.Components.Objects.SmokeState.html
  - name: ','
  - name: " "
  - uid: ECS.Components.Objects.SmokeState
    name: SmokeState
    href: ECS.Components.Objects.SmokeState.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: ECS.Components.Objects.SmokeState
    name: SmokeState
    href: ECS.Components.Objects.SmokeState.html
  - name: ','
  - name: " "
  - uid: ECS.Components.Objects.SmokeState
    name: SmokeState
    href: ECS.Components.Objects.SmokeState.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.Dictionary{ECS.Components.Objects.SmokeState,System.String}
  commentId: T:System.Collections.Generic.Dictionary{ECS.Components.Objects.SmokeState,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<SmokeState, string>
  nameWithType: Dictionary<SmokeState, string>
  fullName: System.Collections.Generic.Dictionary<ECS.Components.Objects.SmokeState, string>
  nameWithType.vb: Dictionary(Of SmokeState, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of ECS.Components.Objects.SmokeState, String)
  name.vb: Dictionary(Of SmokeState, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: ECS.Components.Objects.SmokeState
    name: SmokeState
    href: ECS.Components.Objects.SmokeState.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: ECS.Components.Objects.SmokeState
    name: SmokeState
    href: ECS.Components.Objects.SmokeState.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: ECS.Systems.Effects.ChimneySmokeSystem.#ctor*
  commentId: Overload:ECS.Systems.Effects.ChimneySmokeSystem.#ctor
  href: ECS.Systems.Effects.ChimneySmokeSystem.html#ECS_Systems_Effects_ChimneySmokeSystem__ctor
  name: ChimneySmokeSystem
  nameWithType: ChimneySmokeSystem.ChimneySmokeSystem
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.ChimneySmokeSystem
  nameWithType.vb: ChimneySmokeSystem.New
  fullName.vb: ECS.Systems.Effects.ChimneySmokeSystem.New
  name.vb: New
- uid: ECS.Core.SystemBase.Initialize(ECS.Core.World)
  commentId: M:ECS.Core.SystemBase.Initialize(ECS.Core.World)
  parent: ECS.Core.SystemBase
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Initialize_ECS_Core_World_
  name: Initialize(World)
  nameWithType: SystemBase.Initialize(World)
  fullName: ECS.Core.SystemBase.Initialize(ECS.Core.World)
  spec.csharp:
  - uid: ECS.Core.SystemBase.Initialize(ECS.Core.World)
    name: Initialize
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Initialize_ECS_Core_World_
  - name: (
  - uid: ECS.Core.World
    name: World
    href: ECS.Core.World.html
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.Initialize(ECS.Core.World)
    name: Initialize
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Initialize_ECS_Core_World_
  - name: (
  - uid: ECS.Core.World
    name: World
    href: ECS.Core.World.html
  - name: )
- uid: ECS.Systems.Effects.ChimneySmokeSystem.Initialize*
  commentId: Overload:ECS.Systems.Effects.ChimneySmokeSystem.Initialize
  href: ECS.Systems.Effects.ChimneySmokeSystem.html#ECS_Systems_Effects_ChimneySmokeSystem_Initialize_ECS_Core_World_
  name: Initialize
  nameWithType: ChimneySmokeSystem.Initialize
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.Initialize
- uid: ECS.Core.World
  commentId: T:ECS.Core.World
  parent: ECS.Core
  href: ECS.Core.World.html
  name: World
  nameWithType: World
  fullName: ECS.Core.World
- uid: ECS.Core.SystemBase.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
  commentId: M:ECS.Core.SystemBase.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
  parent: ECS.Core.SystemBase
  isExternal: true
  href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Update_ECS_Core_World_Microsoft_Xna_Framework_GameTime_
  name: Update(World, GameTime)
  nameWithType: SystemBase.Update(World, GameTime)
  fullName: ECS.Core.SystemBase.Update(ECS.Core.World, Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: ECS.Core.SystemBase.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
    name: Update
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Update_ECS_Core_World_Microsoft_Xna_Framework_GameTime_
  - name: (
  - uid: ECS.Core.World
    name: World
    href: ECS.Core.World.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: ECS.Core.SystemBase.Update(ECS.Core.World,Microsoft.Xna.Framework.GameTime)
    name: Update
    href: ECS.Core.SystemBase.html#ECS_Core_SystemBase_Update_ECS_Core_World_Microsoft_Xna_Framework_GameTime_
  - name: (
  - uid: ECS.Core.World
    name: World
    href: ECS.Core.World.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: ECS.Systems.Effects.ChimneySmokeSystem.Update*
  commentId: Overload:ECS.Systems.Effects.ChimneySmokeSystem.Update
  href: ECS.Systems.Effects.ChimneySmokeSystem.html#ECS_Systems_Effects_ChimneySmokeSystem_Update_ECS_Core_World_Microsoft_Xna_Framework_GameTime_
  name: Update
  nameWithType: ChimneySmokeSystem.Update
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: ECS.Systems.Effects.ChimneySmokeSystem.InitializeTimerIfNeeded*
  commentId: Overload:ECS.Systems.Effects.ChimneySmokeSystem.InitializeTimerIfNeeded
  href: ECS.Systems.Effects.ChimneySmokeSystem.html#ECS_Systems_Effects_ChimneySmokeSystem_InitializeTimerIfNeeded_ECS_Core_Entity_
  name: InitializeTimerIfNeeded
  nameWithType: ChimneySmokeSystem.InitializeTimerIfNeeded
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.InitializeTimerIfNeeded
- uid: ECS.Core.Entity
  commentId: T:ECS.Core.Entity
  parent: ECS.Core
  href: ECS.Core.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: ECS.Core.Entity
- uid: ECS.Systems.Effects.ChimneySmokeSystem.HandleTimerExpired*
  commentId: Overload:ECS.Systems.Effects.ChimneySmokeSystem.HandleTimerExpired
  href: ECS.Systems.Effects.ChimneySmokeSystem.html#ECS_Systems_Effects_ChimneySmokeSystem_HandleTimerExpired_ECS_Events_IEvent_
  name: HandleTimerExpired
  nameWithType: ChimneySmokeSystem.HandleTimerExpired
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.HandleTimerExpired
- uid: ECS.Events.IEvent
  commentId: T:ECS.Events.IEvent
  parent: ECS.Events
  href: ECS.Events.IEvent.html
  name: IEvent
  nameWithType: IEvent
  fullName: ECS.Events.IEvent
- uid: ECS.Events
  commentId: N:ECS.Events
  href: ECS.html
  name: ECS.Events
  nameWithType: ECS.Events
  fullName: ECS.Events
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Events
    name: Events
    href: ECS.Events.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Events
    name: Events
    href: ECS.Events.html
- uid: ECS.Systems.Effects.ChimneySmokeSystem.HandleCollision*
  commentId: Overload:ECS.Systems.Effects.ChimneySmokeSystem.HandleCollision
  href: ECS.Systems.Effects.ChimneySmokeSystem.html#ECS_Systems_Effects_ChimneySmokeSystem_HandleCollision_ECS_Events_IEvent_
  name: HandleCollision
  nameWithType: ChimneySmokeSystem.HandleCollision
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.HandleCollision
- uid: ECS.Systems.Effects.ChimneySmokeSystem.GetAnimationStateFromSmokeState*
  commentId: Overload:ECS.Systems.Effects.ChimneySmokeSystem.GetAnimationStateFromSmokeState
  href: ECS.Systems.Effects.ChimneySmokeSystem.html#ECS_Systems_Effects_ChimneySmokeSystem_GetAnimationStateFromSmokeState_ECS_Components_Objects_SmokeState_
  name: GetAnimationStateFromSmokeState
  nameWithType: ChimneySmokeSystem.GetAnimationStateFromSmokeState
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.GetAnimationStateFromSmokeState
- uid: ECS.Components.Objects.SmokeState
  commentId: T:ECS.Components.Objects.SmokeState
  parent: ECS.Components.Objects
  href: ECS.Components.Objects.SmokeState.html
  name: SmokeState
  nameWithType: SmokeState
  fullName: ECS.Components.Objects.SmokeState
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ECS.Components.Objects
  commentId: N:ECS.Components.Objects
  href: ECS.html
  name: ECS.Components.Objects
  nameWithType: ECS.Components.Objects
  fullName: ECS.Components.Objects
  spec.csharp:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Components
    name: Components
    href: ECS.Components.html
  - name: .
  - uid: ECS.Components.Objects
    name: Objects
    href: ECS.Components.Objects.html
  spec.vb:
  - uid: ECS
    name: ECS
    href: ECS.html
  - name: .
  - uid: ECS.Components
    name: Components
    href: ECS.Components.html
  - name: .
  - uid: ECS.Components.Objects
    name: Objects
    href: ECS.Components.Objects.html
- uid: ECS.Systems.Effects.ChimneySmokeSystem.GetDurationForState*
  commentId: Overload:ECS.Systems.Effects.ChimneySmokeSystem.GetDurationForState
  href: ECS.Systems.Effects.ChimneySmokeSystem.html#ECS_Systems_Effects_ChimneySmokeSystem_GetDurationForState_ECS_Core_Entity_ECS_Components_Objects_SmokeState_
  name: GetDurationForState
  nameWithType: ChimneySmokeSystem.GetDurationForState
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.GetDurationForState
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: ECS.Systems.Effects.ChimneySmokeSystem.GetNextState*
  commentId: Overload:ECS.Systems.Effects.ChimneySmokeSystem.GetNextState
  href: ECS.Systems.Effects.ChimneySmokeSystem.html#ECS_Systems_Effects_ChimneySmokeSystem_GetNextState_ECS_Components_Objects_SmokeState_
  name: GetNextState
  nameWithType: ChimneySmokeSystem.GetNextState
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.GetNextState
- uid: ECS.Systems.Effects.ChimneySmokeSystem.CycleSmokeState*
  commentId: Overload:ECS.Systems.Effects.ChimneySmokeSystem.CycleSmokeState
  href: ECS.Systems.Effects.ChimneySmokeSystem.html#ECS_Systems_Effects_ChimneySmokeSystem_CycleSmokeState_ECS_Core_Entity_
  name: CycleSmokeState
  nameWithType: ChimneySmokeSystem.CycleSmokeState
  fullName: ECS.Systems.Effects.ChimneySmokeSystem.CycleSmokeState
